     0  *ast.GenDecl {
     1  .  Doc: nil
     2  .  TokPos: 3:1
     3  .  Tok: import
     4  .  Lparen: 3:8
     5  .  Specs: []ast.Spec (len = 8) {
     6  .  .  0: *ast.ImportSpec {
     7  .  .  .  Doc: nil
     8  .  .  .  Name: nil
     9  .  .  .  Path: *ast.BasicLit {
    10  .  .  .  .  ValuePos: 4:2
    11  .  .  .  .  Kind: STRING
    12  .  .  .  .  Value: "\"reflect\""
    13  .  .  .  }
    14  .  .  .  Comment: nil
    15  .  .  .  EndPos: -
    16  .  .  }
    17  .  .  1: *ast.ImportSpec {
    18  .  .  .  Doc: nil
    19  .  .  .  Name: nil
    20  .  .  .  Path: *ast.BasicLit {
    21  .  .  .  .  ValuePos: 5:2
    22  .  .  .  .  Kind: STRING
    23  .  .  .  .  Value: "\"time\""
    24  .  .  .  }
    25  .  .  .  Comment: nil
    26  .  .  .  EndPos: -
    27  .  .  }
    28  .  .  2: *ast.ImportSpec {
    29  .  .  .  Doc: nil
    30  .  .  .  Name: nil
    31  .  .  .  Path: *ast.BasicLit {
    32  .  .  .  .  ValuePos: 7:2
    33  .  .  .  .  Kind: STRING
    34  .  .  .  .  Value: "\"github.com/docker/swarmkit/api\""
    35  .  .  .  }
    36  .  .  .  Comment: nil
    37  .  .  .  EndPos: -
    38  .  .  }
    39  .  .  3: *ast.ImportSpec {
    40  .  .  .  Doc: nil
    41  .  .  .  Name: nil
    42  .  .  .  Path: *ast.BasicLit {
    43  .  .  .  .  ValuePos: 8:2
    44  .  .  .  .  Kind: STRING
    45  .  .  .  .  Value: "\"github.com/docker/swarmkit/api/defaults\""
    46  .  .  .  }
    47  .  .  .  Comment: nil
    48  .  .  .  EndPos: -
    49  .  .  }
    50  .  .  4: *ast.ImportSpec {
    51  .  .  .  Doc: nil
    52  .  .  .  Name: nil
    53  .  .  .  Path: *ast.BasicLit {
    54  .  .  .  .  ValuePos: 9:2
    55  .  .  .  .  Kind: STRING
    56  .  .  .  .  Value: "\"github.com/docker/swarmkit/identity\""
    57  .  .  .  }
    58  .  .  .  Comment: nil
    59  .  .  .  EndPos: -
    60  .  .  }
    61  .  .  5: *ast.ImportSpec {
    62  .  .  .  Doc: nil
    63  .  .  .  Name: nil
    64  .  .  .  Path: *ast.BasicLit {
    65  .  .  .  .  ValuePos: 10:2
    66  .  .  .  .  Kind: STRING
    67  .  .  .  .  Value: "\"github.com/docker/swarmkit/manager/constraint\""
    68  .  .  .  }
    69  .  .  .  Comment: nil
    70  .  .  .  EndPos: -
    71  .  .  }
    72  .  .  6: *ast.ImportSpec {
    73  .  .  .  Doc: nil
    74  .  .  .  Name: nil
    75  .  .  .  Path: *ast.BasicLit {
    76  .  .  .  .  ValuePos: 11:2
    77  .  .  .  .  Kind: STRING
    78  .  .  .  .  Value: "\"github.com/docker/swarmkit/protobuf/ptypes\""
    79  .  .  .  }
    80  .  .  .  Comment: nil
    81  .  .  .  EndPos: -
    82  .  .  }
    83  .  .  7: *ast.ImportSpec {
    84  .  .  .  Doc: nil
    85  .  .  .  Name: *ast.Ident {
    86  .  .  .  .  NamePos: 12:2
    87  .  .  .  .  Name: "google_protobuf"
    88  .  .  .  .  Obj: nil
    89  .  .  .  }
    90  .  .  .  Path: *ast.BasicLit {
    91  .  .  .  .  ValuePos: 12:18
    92  .  .  .  .  Kind: STRING
    93  .  .  .  .  Value: "\"github.com/gogo/protobuf/types\""
    94  .  .  .  }
    95  .  .  .  Comment: nil
    96  .  .  .  EndPos: -
    97  .  .  }
    98  .  }
    99  .  Rparen: 13:1
   100  }
     0  *ast.FuncDecl {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: 15:1
     5  .  .  .  .  Text: "// NewTask creates a new task."
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  Recv: nil
    10  .  Name: *ast.Ident {
    11  .  .  NamePos: 16:6
    12  .  .  Name: "NewTask"
    13  .  .  Obj: *ast.Object {
    14  .  .  .  Kind: func
    15  .  .  .  Name: "NewTask"
    16  .  .  .  Decl: *(obj @ 0)
    17  .  .  .  Data: nil
    18  .  .  .  Type: nil
    19  .  .  }
    20  .  }
    21  .  Type: *ast.FuncType {
    22  .  .  Func: 16:1
    23  .  .  Params: *ast.FieldList {
    24  .  .  .  Opening: 16:13
    25  .  .  .  List: []*ast.Field (len = 4) {
    26  .  .  .  .  0: *ast.Field {
    27  .  .  .  .  .  Doc: nil
    28  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    29  .  .  .  .  .  .  0: *ast.Ident {
    30  .  .  .  .  .  .  .  NamePos: 16:14
    31  .  .  .  .  .  .  .  Name: "cluster"
    32  .  .  .  .  .  .  .  Obj: *ast.Object {
    33  .  .  .  .  .  .  .  .  Kind: var
    34  .  .  .  .  .  .  .  .  Name: "cluster"
    35  .  .  .  .  .  .  .  .  Decl: *(obj @ 26)
    36  .  .  .  .  .  .  .  .  Data: nil
    37  .  .  .  .  .  .  .  .  Type: nil
    38  .  .  .  .  .  .  .  }
    39  .  .  .  .  .  .  }
    40  .  .  .  .  .  }
    41  .  .  .  .  .  Type: *ast.StarExpr {
    42  .  .  .  .  .  .  Star: 16:22
    43  .  .  .  .  .  .  X: *ast.SelectorExpr {
    44  .  .  .  .  .  .  .  X: *ast.Ident {
    45  .  .  .  .  .  .  .  .  NamePos: 16:23
    46  .  .  .  .  .  .  .  .  Name: "api"
    47  .  .  .  .  .  .  .  .  Obj: nil
    48  .  .  .  .  .  .  .  }
    49  .  .  .  .  .  .  .  Sel: *ast.Ident {
    50  .  .  .  .  .  .  .  .  NamePos: 16:27
    51  .  .  .  .  .  .  .  .  Name: "Cluster"
    52  .  .  .  .  .  .  .  .  Obj: nil
    53  .  .  .  .  .  .  .  }
    54  .  .  .  .  .  .  }
    55  .  .  .  .  .  }
    56  .  .  .  .  .  Tag: nil
    57  .  .  .  .  .  Comment: nil
    58  .  .  .  .  }
    59  .  .  .  .  1: *ast.Field {
    60  .  .  .  .  .  Doc: nil
    61  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    62  .  .  .  .  .  .  0: *ast.Ident {
    63  .  .  .  .  .  .  .  NamePos: 16:36
    64  .  .  .  .  .  .  .  Name: "service"
    65  .  .  .  .  .  .  .  Obj: *ast.Object {
    66  .  .  .  .  .  .  .  .  Kind: var
    67  .  .  .  .  .  .  .  .  Name: "service"
    68  .  .  .  .  .  .  .  .  Decl: *(obj @ 59)
    69  .  .  .  .  .  .  .  .  Data: nil
    70  .  .  .  .  .  .  .  .  Type: nil
    71  .  .  .  .  .  .  .  }
    72  .  .  .  .  .  .  }
    73  .  .  .  .  .  }
    74  .  .  .  .  .  Type: *ast.StarExpr {
    75  .  .  .  .  .  .  Star: 16:44
    76  .  .  .  .  .  .  X: *ast.SelectorExpr {
    77  .  .  .  .  .  .  .  X: *ast.Ident {
    78  .  .  .  .  .  .  .  .  NamePos: 16:45
    79  .  .  .  .  .  .  .  .  Name: "api"
    80  .  .  .  .  .  .  .  .  Obj: nil
    81  .  .  .  .  .  .  .  }
    82  .  .  .  .  .  .  .  Sel: *ast.Ident {
    83  .  .  .  .  .  .  .  .  NamePos: 16:49
    84  .  .  .  .  .  .  .  .  Name: "Service"
    85  .  .  .  .  .  .  .  .  Obj: nil
    86  .  .  .  .  .  .  .  }
    87  .  .  .  .  .  .  }
    88  .  .  .  .  .  }
    89  .  .  .  .  .  Tag: nil
    90  .  .  .  .  .  Comment: nil
    91  .  .  .  .  }
    92  .  .  .  .  2: *ast.Field {
    93  .  .  .  .  .  Doc: nil
    94  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    95  .  .  .  .  .  .  0: *ast.Ident {
    96  .  .  .  .  .  .  .  NamePos: 16:58
    97  .  .  .  .  .  .  .  Name: "slot"
    98  .  .  .  .  .  .  .  Obj: *ast.Object {
    99  .  .  .  .  .  .  .  .  Kind: var
   100  .  .  .  .  .  .  .  .  Name: "slot"
   101  .  .  .  .  .  .  .  .  Decl: *(obj @ 92)
   102  .  .  .  .  .  .  .  .  Data: nil
   103  .  .  .  .  .  .  .  .  Type: nil
   104  .  .  .  .  .  .  .  }
   105  .  .  .  .  .  .  }
   106  .  .  .  .  .  }
   107  .  .  .  .  .  Type: *ast.Ident {
   108  .  .  .  .  .  .  NamePos: 16:63
   109  .  .  .  .  .  .  Name: "uint64"
   110  .  .  .  .  .  .  Obj: nil
   111  .  .  .  .  .  }
   112  .  .  .  .  .  Tag: nil
   113  .  .  .  .  .  Comment: nil
   114  .  .  .  .  }
   115  .  .  .  .  3: *ast.Field {
   116  .  .  .  .  .  Doc: nil
   117  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   118  .  .  .  .  .  .  0: *ast.Ident {
   119  .  .  .  .  .  .  .  NamePos: 16:71
   120  .  .  .  .  .  .  .  Name: "nodeID"
   121  .  .  .  .  .  .  .  Obj: *ast.Object {
   122  .  .  .  .  .  .  .  .  Kind: var
   123  .  .  .  .  .  .  .  .  Name: "nodeID"
   124  .  .  .  .  .  .  .  .  Decl: *(obj @ 115)
   125  .  .  .  .  .  .  .  .  Data: nil
   126  .  .  .  .  .  .  .  .  Type: nil
   127  .  .  .  .  .  .  .  }
   128  .  .  .  .  .  .  }
   129  .  .  .  .  .  }
   130  .  .  .  .  .  Type: *ast.Ident {
   131  .  .  .  .  .  .  NamePos: 16:78
   132  .  .  .  .  .  .  Name: "string"
   133  .  .  .  .  .  .  Obj: nil
   134  .  .  .  .  .  }
   135  .  .  .  .  .  Tag: nil
   136  .  .  .  .  .  Comment: nil
   137  .  .  .  .  }
   138  .  .  .  }
   139  .  .  .  Closing: 16:84
   140  .  .  }
   141  .  .  Results: *ast.FieldList {
   142  .  .  .  Opening: -
   143  .  .  .  List: []*ast.Field (len = 1) {
   144  .  .  .  .  0: *ast.Field {
   145  .  .  .  .  .  Doc: nil
   146  .  .  .  .  .  Names: nil
   147  .  .  .  .  .  Type: *ast.StarExpr {
   148  .  .  .  .  .  .  Star: 16:86
   149  .  .  .  .  .  .  X: *ast.SelectorExpr {
   150  .  .  .  .  .  .  .  X: *ast.Ident {
   151  .  .  .  .  .  .  .  .  NamePos: 16:87
   152  .  .  .  .  .  .  .  .  Name: "api"
   153  .  .  .  .  .  .  .  .  Obj: nil
   154  .  .  .  .  .  .  .  }
   155  .  .  .  .  .  .  .  Sel: *ast.Ident {
   156  .  .  .  .  .  .  .  .  NamePos: 16:91
   157  .  .  .  .  .  .  .  .  Name: "Task"
   158  .  .  .  .  .  .  .  .  Obj: nil
   159  .  .  .  .  .  .  .  }
   160  .  .  .  .  .  .  }
   161  .  .  .  .  .  }
   162  .  .  .  .  .  Tag: nil
   163  .  .  .  .  .  Comment: nil
   164  .  .  .  .  }
   165  .  .  .  }
   166  .  .  .  Closing: -
   167  .  .  }
   168  .  }
   169  .  Body: *ast.BlockStmt {
   170  .  .  Lbrace: 16:96
   171  .  .  List: []ast.Stmt (len = 6) {
   172  .  .  .  0: *ast.DeclStmt {
   173  .  .  .  .  Decl: *ast.GenDecl {
   174  .  .  .  .  .  Doc: nil
   175  .  .  .  .  .  TokPos: 17:2
   176  .  .  .  .  .  Tok: var
   177  .  .  .  .  .  Lparen: -
   178  .  .  .  .  .  Specs: []ast.Spec (len = 1) {
   179  .  .  .  .  .  .  0: *ast.ValueSpec {
   180  .  .  .  .  .  .  .  Doc: nil
   181  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   182  .  .  .  .  .  .  .  .  0: *ast.Ident {
   183  .  .  .  .  .  .  .  .  .  NamePos: 17:6
   184  .  .  .  .  .  .  .  .  .  Name: "logDriver"
   185  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   186  .  .  .  .  .  .  .  .  .  .  Kind: var
   187  .  .  .  .  .  .  .  .  .  .  Name: "logDriver"
   188  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 179)
   189  .  .  .  .  .  .  .  .  .  .  Data: 0
   190  .  .  .  .  .  .  .  .  .  .  Type: nil
   191  .  .  .  .  .  .  .  .  .  }
   192  .  .  .  .  .  .  .  .  }
   193  .  .  .  .  .  .  .  }
   194  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   195  .  .  .  .  .  .  .  .  Star: 17:16
   196  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   197  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   198  .  .  .  .  .  .  .  .  .  .  NamePos: 17:17
   199  .  .  .  .  .  .  .  .  .  .  Name: "api"
   200  .  .  .  .  .  .  .  .  .  .  Obj: nil
   201  .  .  .  .  .  .  .  .  .  }
   202  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   203  .  .  .  .  .  .  .  .  .  .  NamePos: 17:21
   204  .  .  .  .  .  .  .  .  .  .  Name: "Driver"
   205  .  .  .  .  .  .  .  .  .  .  Obj: nil
   206  .  .  .  .  .  .  .  .  .  }
   207  .  .  .  .  .  .  .  .  }
   208  .  .  .  .  .  .  .  }
   209  .  .  .  .  .  .  .  Values: nil
   210  .  .  .  .  .  .  .  Comment: nil
   211  .  .  .  .  .  .  }
   212  .  .  .  .  .  }
   213  .  .  .  .  .  Rparen: -
   214  .  .  .  .  }
   215  .  .  .  }
   216  .  .  .  1: *ast.IfStmt {
   217  .  .  .  .  If: 18:2
   218  .  .  .  .  Init: nil
   219  .  .  .  .  Cond: *ast.BinaryExpr {
   220  .  .  .  .  .  X: *ast.SelectorExpr {
   221  .  .  .  .  .  .  X: *ast.SelectorExpr {
   222  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   223  .  .  .  .  .  .  .  .  X: *ast.Ident {
   224  .  .  .  .  .  .  .  .  .  NamePos: 18:5
   225  .  .  .  .  .  .  .  .  .  Name: "service"
   226  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 65)
   227  .  .  .  .  .  .  .  .  }
   228  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   229  .  .  .  .  .  .  .  .  .  NamePos: 18:13
   230  .  .  .  .  .  .  .  .  .  Name: "Spec"
   231  .  .  .  .  .  .  .  .  .  Obj: nil
   232  .  .  .  .  .  .  .  .  }
   233  .  .  .  .  .  .  .  }
   234  .  .  .  .  .  .  .  Sel: *ast.Ident {
   235  .  .  .  .  .  .  .  .  NamePos: 18:18
   236  .  .  .  .  .  .  .  .  Name: "Task"
   237  .  .  .  .  .  .  .  .  Obj: nil
   238  .  .  .  .  .  .  .  }
   239  .  .  .  .  .  .  }
   240  .  .  .  .  .  .  Sel: *ast.Ident {
   241  .  .  .  .  .  .  .  NamePos: 18:23
   242  .  .  .  .  .  .  .  Name: "LogDriver"
   243  .  .  .  .  .  .  .  Obj: nil
   244  .  .  .  .  .  .  }
   245  .  .  .  .  .  }
   246  .  .  .  .  .  OpPos: 18:33
   247  .  .  .  .  .  Op: !=
   248  .  .  .  .  .  Y: *ast.Ident {
   249  .  .  .  .  .  .  NamePos: 18:36
   250  .  .  .  .  .  .  Name: "nil"
   251  .  .  .  .  .  .  Obj: nil
   252  .  .  .  .  .  }
   253  .  .  .  .  }
   254  .  .  .  .  Body: *ast.BlockStmt {
   255  .  .  .  .  .  Lbrace: 18:40
   256  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   257  .  .  .  .  .  .  0: *ast.AssignStmt {
   258  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   259  .  .  .  .  .  .  .  .  0: *ast.Ident {
   260  .  .  .  .  .  .  .  .  .  NamePos: 20:3
   261  .  .  .  .  .  .  .  .  .  Name: "logDriver"
   262  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 185)
   263  .  .  .  .  .  .  .  .  }
   264  .  .  .  .  .  .  .  }
   265  .  .  .  .  .  .  .  TokPos: 20:13
   266  .  .  .  .  .  .  .  Tok: =
   267  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   268  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   269  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   270  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   271  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   272  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 20:15
   273  .  .  .  .  .  .  .  .  .  .  .  .  Name: "service"
   274  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 65)
   275  .  .  .  .  .  .  .  .  .  .  .  }
   276  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   277  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 20:23
   278  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
   279  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   280  .  .  .  .  .  .  .  .  .  .  .  }
   281  .  .  .  .  .  .  .  .  .  .  }
   282  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   283  .  .  .  .  .  .  .  .  .  .  .  NamePos: 20:28
   284  .  .  .  .  .  .  .  .  .  .  .  Name: "Task"
   285  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   286  .  .  .  .  .  .  .  .  .  .  }
   287  .  .  .  .  .  .  .  .  .  }
   288  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   289  .  .  .  .  .  .  .  .  .  .  NamePos: 20:33
   290  .  .  .  .  .  .  .  .  .  .  Name: "LogDriver"
   291  .  .  .  .  .  .  .  .  .  .  Obj: nil
   292  .  .  .  .  .  .  .  .  .  }
   293  .  .  .  .  .  .  .  .  }
   294  .  .  .  .  .  .  .  }
   295  .  .  .  .  .  .  }
   296  .  .  .  .  .  }
   297  .  .  .  .  .  Rbrace: 21:2
   298  .  .  .  .  }
   299  .  .  .  .  Else: *ast.IfStmt {
   300  .  .  .  .  .  If: 21:9
   301  .  .  .  .  .  Init: nil
   302  .  .  .  .  .  Cond: *ast.BinaryExpr {
   303  .  .  .  .  .  .  X: *ast.Ident {
   304  .  .  .  .  .  .  .  NamePos: 21:12
   305  .  .  .  .  .  .  .  Name: "cluster"
   306  .  .  .  .  .  .  .  Obj: *(obj @ 32)
   307  .  .  .  .  .  .  }
   308  .  .  .  .  .  .  OpPos: 21:20
   309  .  .  .  .  .  .  Op: !=
   310  .  .  .  .  .  .  Y: *ast.Ident {
   311  .  .  .  .  .  .  .  NamePos: 21:23
   312  .  .  .  .  .  .  .  Name: "nil"
   313  .  .  .  .  .  .  .  Obj: nil
   314  .  .  .  .  .  .  }
   315  .  .  .  .  .  }
   316  .  .  .  .  .  Body: *ast.BlockStmt {
   317  .  .  .  .  .  .  Lbrace: 21:27
   318  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   319  .  .  .  .  .  .  .  0: *ast.AssignStmt {
   320  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   321  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   322  .  .  .  .  .  .  .  .  .  .  NamePos: 23:3
   323  .  .  .  .  .  .  .  .  .  .  Name: "logDriver"
   324  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 185)
   325  .  .  .  .  .  .  .  .  .  }
   326  .  .  .  .  .  .  .  .  }
   327  .  .  .  .  .  .  .  .  TokPos: 23:13
   328  .  .  .  .  .  .  .  .  Tok: =
   329  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   330  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   331  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   332  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   333  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   334  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 23:15
   335  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "cluster"
   336  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 32)
   337  .  .  .  .  .  .  .  .  .  .  .  .  }
   338  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   339  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 23:23
   340  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
   341  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   342  .  .  .  .  .  .  .  .  .  .  .  .  }
   343  .  .  .  .  .  .  .  .  .  .  .  }
   344  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   345  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 23:28
   346  .  .  .  .  .  .  .  .  .  .  .  .  Name: "TaskDefaults"
   347  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   348  .  .  .  .  .  .  .  .  .  .  .  }
   349  .  .  .  .  .  .  .  .  .  .  }
   350  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   351  .  .  .  .  .  .  .  .  .  .  .  NamePos: 23:41
   352  .  .  .  .  .  .  .  .  .  .  .  Name: "LogDriver"
   353  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   354  .  .  .  .  .  .  .  .  .  .  }
   355  .  .  .  .  .  .  .  .  .  }
   356  .  .  .  .  .  .  .  .  }
   357  .  .  .  .  .  .  .  }
   358  .  .  .  .  .  .  }
   359  .  .  .  .  .  .  Rbrace: 24:2
   360  .  .  .  .  .  }
   361  .  .  .  .  .  Else: nil
   362  .  .  .  .  }
   363  .  .  .  }
   364  .  .  .  2: *ast.AssignStmt {
   365  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   366  .  .  .  .  .  0: *ast.Ident {
   367  .  .  .  .  .  .  NamePos: 26:2
   368  .  .  .  .  .  .  Name: "taskID"
   369  .  .  .  .  .  .  Obj: *ast.Object {
   370  .  .  .  .  .  .  .  Kind: var
   371  .  .  .  .  .  .  .  Name: "taskID"
   372  .  .  .  .  .  .  .  Decl: *(obj @ 364)
   373  .  .  .  .  .  .  .  Data: nil
   374  .  .  .  .  .  .  .  Type: nil
   375  .  .  .  .  .  .  }
   376  .  .  .  .  .  }
   377  .  .  .  .  }
   378  .  .  .  .  TokPos: 26:9
   379  .  .  .  .  Tok: :=
   380  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   381  .  .  .  .  .  0: *ast.CallExpr {
   382  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   383  .  .  .  .  .  .  .  X: *ast.Ident {
   384  .  .  .  .  .  .  .  .  NamePos: 26:12
   385  .  .  .  .  .  .  .  .  Name: "identity"
   386  .  .  .  .  .  .  .  .  Obj: nil
   387  .  .  .  .  .  .  .  }
   388  .  .  .  .  .  .  .  Sel: *ast.Ident {
   389  .  .  .  .  .  .  .  .  NamePos: 26:21
   390  .  .  .  .  .  .  .  .  Name: "NewID"
   391  .  .  .  .  .  .  .  .  Obj: nil
   392  .  .  .  .  .  .  .  }
   393  .  .  .  .  .  .  }
   394  .  .  .  .  .  .  Lparen: 26:26
   395  .  .  .  .  .  .  Args: nil
   396  .  .  .  .  .  .  Ellipsis: -
   397  .  .  .  .  .  .  Rparen: 26:27
   398  .  .  .  .  .  }
   399  .  .  .  .  }
   400  .  .  .  }
   401  .  .  .  3: *ast.AssignStmt {
   402  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   403  .  .  .  .  .  0: *ast.Ident {
   404  .  .  .  .  .  .  NamePos: 27:2
   405  .  .  .  .  .  .  Name: "task"
   406  .  .  .  .  .  .  Obj: *ast.Object {
   407  .  .  .  .  .  .  .  Kind: var
   408  .  .  .  .  .  .  .  Name: "task"
   409  .  .  .  .  .  .  .  Decl: *(obj @ 401)
   410  .  .  .  .  .  .  .  Data: nil
   411  .  .  .  .  .  .  .  Type: nil
   412  .  .  .  .  .  .  }
   413  .  .  .  .  .  }
   414  .  .  .  .  }
   415  .  .  .  .  TokPos: 27:7
   416  .  .  .  .  Tok: :=
   417  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   418  .  .  .  .  .  0: *ast.CompositeLit {
   419  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   420  .  .  .  .  .  .  .  X: *ast.Ident {
   421  .  .  .  .  .  .  .  .  NamePos: 27:10
   422  .  .  .  .  .  .  .  .  Name: "api"
   423  .  .  .  .  .  .  .  .  Obj: nil
   424  .  .  .  .  .  .  .  }
   425  .  .  .  .  .  .  .  Sel: *ast.Ident {
   426  .  .  .  .  .  .  .  .  NamePos: 27:14
   427  .  .  .  .  .  .  .  .  Name: "Task"
   428  .  .  .  .  .  .  .  .  Obj: nil
   429  .  .  .  .  .  .  .  }
   430  .  .  .  .  .  .  }
   431  .  .  .  .  .  .  Lbrace: 27:18
   432  .  .  .  .  .  .  Elts: []ast.Expr (len = 10) {
   433  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
   434  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   435  .  .  .  .  .  .  .  .  .  NamePos: 28:3
   436  .  .  .  .  .  .  .  .  .  Name: "ID"
   437  .  .  .  .  .  .  .  .  .  Obj: nil
   438  .  .  .  .  .  .  .  .  }
   439  .  .  .  .  .  .  .  .  Colon: 28:5
   440  .  .  .  .  .  .  .  .  Value: *ast.Ident {
   441  .  .  .  .  .  .  .  .  .  NamePos: 28:23
   442  .  .  .  .  .  .  .  .  .  Name: "taskID"
   443  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 369)
   444  .  .  .  .  .  .  .  .  }
   445  .  .  .  .  .  .  .  }
   446  .  .  .  .  .  .  .  1: *ast.KeyValueExpr {
   447  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   448  .  .  .  .  .  .  .  .  .  NamePos: 29:3
   449  .  .  .  .  .  .  .  .  .  Name: "ServiceAnnotations"
   450  .  .  .  .  .  .  .  .  .  Obj: nil
   451  .  .  .  .  .  .  .  .  }
   452  .  .  .  .  .  .  .  .  Colon: 29:21
   453  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
   454  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   455  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   456  .  .  .  .  .  .  .  .  .  .  .  NamePos: 29:23
   457  .  .  .  .  .  .  .  .  .  .  .  Name: "service"
   458  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 65)
   459  .  .  .  .  .  .  .  .  .  .  }
   460  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   461  .  .  .  .  .  .  .  .  .  .  .  NamePos: 29:31
   462  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
   463  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   464  .  .  .  .  .  .  .  .  .  .  }
   465  .  .  .  .  .  .  .  .  .  }
   466  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   467  .  .  .  .  .  .  .  .  .  .  NamePos: 29:36
   468  .  .  .  .  .  .  .  .  .  .  Name: "Annotations"
   469  .  .  .  .  .  .  .  .  .  .  Obj: nil
   470  .  .  .  .  .  .  .  .  .  }
   471  .  .  .  .  .  .  .  .  }
   472  .  .  .  .  .  .  .  }
   473  .  .  .  .  .  .  .  2: *ast.KeyValueExpr {
   474  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   475  .  .  .  .  .  .  .  .  .  NamePos: 30:3
   476  .  .  .  .  .  .  .  .  .  Name: "Spec"
   477  .  .  .  .  .  .  .  .  .  Obj: nil
   478  .  .  .  .  .  .  .  .  }
   479  .  .  .  .  .  .  .  .  Colon: 30:7
   480  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
   481  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   482  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   483  .  .  .  .  .  .  .  .  .  .  .  NamePos: 30:23
   484  .  .  .  .  .  .  .  .  .  .  .  Name: "service"
   485  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 65)
   486  .  .  .  .  .  .  .  .  .  .  }
   487  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   488  .  .  .  .  .  .  .  .  .  .  .  NamePos: 30:31
   489  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
   490  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   491  .  .  .  .  .  .  .  .  .  .  }
   492  .  .  .  .  .  .  .  .  .  }
   493  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   494  .  .  .  .  .  .  .  .  .  .  NamePos: 30:36
   495  .  .  .  .  .  .  .  .  .  .  Name: "Task"
   496  .  .  .  .  .  .  .  .  .  .  Obj: nil
   497  .  .  .  .  .  .  .  .  .  }
   498  .  .  .  .  .  .  .  .  }
   499  .  .  .  .  .  .  .  }
   500  .  .  .  .  .  .  .  3: *ast.KeyValueExpr {
   501  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   502  .  .  .  .  .  .  .  .  .  NamePos: 31:3
   503  .  .  .  .  .  .  .  .  .  Name: "SpecVersion"
   504  .  .  .  .  .  .  .  .  .  Obj: nil
   505  .  .  .  .  .  .  .  .  }
   506  .  .  .  .  .  .  .  .  Colon: 31:14
   507  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
   508  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   509  .  .  .  .  .  .  .  .  .  .  NamePos: 31:23
   510  .  .  .  .  .  .  .  .  .  .  Name: "service"
   511  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 65)
   512  .  .  .  .  .  .  .  .  .  }
   513  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   514  .  .  .  .  .  .  .  .  .  .  NamePos: 31:31
   515  .  .  .  .  .  .  .  .  .  .  Name: "SpecVersion"
   516  .  .  .  .  .  .  .  .  .  .  Obj: nil
   517  .  .  .  .  .  .  .  .  .  }
   518  .  .  .  .  .  .  .  .  }
   519  .  .  .  .  .  .  .  }
   520  .  .  .  .  .  .  .  4: *ast.KeyValueExpr {
   521  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   522  .  .  .  .  .  .  .  .  .  NamePos: 32:3
   523  .  .  .  .  .  .  .  .  .  Name: "ServiceID"
   524  .  .  .  .  .  .  .  .  .  Obj: nil
   525  .  .  .  .  .  .  .  .  }
   526  .  .  .  .  .  .  .  .  Colon: 32:12
   527  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
   528  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   529  .  .  .  .  .  .  .  .  .  .  NamePos: 32:23
   530  .  .  .  .  .  .  .  .  .  .  Name: "service"
   531  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 65)
   532  .  .  .  .  .  .  .  .  .  }
   533  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   534  .  .  .  .  .  .  .  .  .  .  NamePos: 32:31
   535  .  .  .  .  .  .  .  .  .  .  Name: "ID"
   536  .  .  .  .  .  .  .  .  .  .  Obj: nil
   537  .  .  .  .  .  .  .  .  .  }
   538  .  .  .  .  .  .  .  .  }
   539  .  .  .  .  .  .  .  }
   540  .  .  .  .  .  .  .  5: *ast.KeyValueExpr {
   541  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   542  .  .  .  .  .  .  .  .  .  NamePos: 33:3
   543  .  .  .  .  .  .  .  .  .  Name: "Slot"
   544  .  .  .  .  .  .  .  .  .  Obj: nil
   545  .  .  .  .  .  .  .  .  }
   546  .  .  .  .  .  .  .  .  Colon: 33:7
   547  .  .  .  .  .  .  .  .  Value: *ast.Ident {
   548  .  .  .  .  .  .  .  .  .  NamePos: 33:23
   549  .  .  .  .  .  .  .  .  .  Name: "slot"
   550  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 98)
   551  .  .  .  .  .  .  .  .  }
   552  .  .  .  .  .  .  .  }
   553  .  .  .  .  .  .  .  6: *ast.KeyValueExpr {
   554  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   555  .  .  .  .  .  .  .  .  .  NamePos: 34:3
   556  .  .  .  .  .  .  .  .  .  Name: "Status"
   557  .  .  .  .  .  .  .  .  .  Obj: nil
   558  .  .  .  .  .  .  .  .  }
   559  .  .  .  .  .  .  .  .  Colon: 34:9
   560  .  .  .  .  .  .  .  .  Value: *ast.CompositeLit {
   561  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   562  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   563  .  .  .  .  .  .  .  .  .  .  .  NamePos: 34:11
   564  .  .  .  .  .  .  .  .  .  .  .  Name: "api"
   565  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   566  .  .  .  .  .  .  .  .  .  .  }
   567  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   568  .  .  .  .  .  .  .  .  .  .  .  NamePos: 34:15
   569  .  .  .  .  .  .  .  .  .  .  .  Name: "TaskStatus"
   570  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   571  .  .  .  .  .  .  .  .  .  .  }
   572  .  .  .  .  .  .  .  .  .  }
   573  .  .  .  .  .  .  .  .  .  Lbrace: 34:25
   574  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 3) {
   575  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
   576  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   577  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 35:4
   578  .  .  .  .  .  .  .  .  .  .  .  .  Name: "State"
   579  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   580  .  .  .  .  .  .  .  .  .  .  .  }
   581  .  .  .  .  .  .  .  .  .  .  .  Colon: 35:9
   582  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
   583  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   584  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 35:15
   585  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "api"
   586  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   587  .  .  .  .  .  .  .  .  .  .  .  .  }
   588  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   589  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 35:19
   590  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "TaskStateNew"
   591  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   592  .  .  .  .  .  .  .  .  .  .  .  .  }
   593  .  .  .  .  .  .  .  .  .  .  .  }
   594  .  .  .  .  .  .  .  .  .  .  }
   595  .  .  .  .  .  .  .  .  .  .  1: *ast.KeyValueExpr {
   596  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   597  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 36:4
   598  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Timestamp"
   599  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   600  .  .  .  .  .  .  .  .  .  .  .  }
   601  .  .  .  .  .  .  .  .  .  .  .  Colon: 36:13
   602  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.CallExpr {
   603  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   604  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   605  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 36:15
   606  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ptypes"
   607  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   608  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   609  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   610  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 36:22
   611  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "MustTimestampProto"
   612  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   613  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   614  .  .  .  .  .  .  .  .  .  .  .  .  }
   615  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 36:40
   616  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   617  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   618  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   619  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   620  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 36:41
   621  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "time"
   622  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   623  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   624  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   625  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 36:46
   626  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Now"
   627  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   628  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   629  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   630  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 36:49
   631  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil
   632  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   633  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 36:50
   634  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   635  .  .  .  .  .  .  .  .  .  .  .  .  }
   636  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   637  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 36:51
   638  .  .  .  .  .  .  .  .  .  .  .  }
   639  .  .  .  .  .  .  .  .  .  .  }
   640  .  .  .  .  .  .  .  .  .  .  2: *ast.KeyValueExpr {
   641  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   642  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 37:4
   643  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Message"
   644  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   645  .  .  .  .  .  .  .  .  .  .  .  }
   646  .  .  .  .  .  .  .  .  .  .  .  Colon: 37:11
   647  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.BasicLit {
   648  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 37:15
   649  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
   650  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"created\""
   651  .  .  .  .  .  .  .  .  .  .  .  }
   652  .  .  .  .  .  .  .  .  .  .  }
   653  .  .  .  .  .  .  .  .  .  }
   654  .  .  .  .  .  .  .  .  .  Rbrace: 38:3
   655  .  .  .  .  .  .  .  .  }
   656  .  .  .  .  .  .  .  }
   657  .  .  .  .  .  .  .  7: *ast.KeyValueExpr {
   658  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   659  .  .  .  .  .  .  .  .  .  NamePos: 39:3
   660  .  .  .  .  .  .  .  .  .  Name: "Endpoint"
   661  .  .  .  .  .  .  .  .  .  Obj: nil
   662  .  .  .  .  .  .  .  .  }
   663  .  .  .  .  .  .  .  .  Colon: 39:11
   664  .  .  .  .  .  .  .  .  Value: *ast.UnaryExpr {
   665  .  .  .  .  .  .  .  .  .  OpPos: 39:13
   666  .  .  .  .  .  .  .  .  .  Op: &
   667  .  .  .  .  .  .  .  .  .  X: *ast.CompositeLit {
   668  .  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   669  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   670  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 39:14
   671  .  .  .  .  .  .  .  .  .  .  .  .  Name: "api"
   672  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   673  .  .  .  .  .  .  .  .  .  .  .  }
   674  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   675  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 39:18
   676  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Endpoint"
   677  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   678  .  .  .  .  .  .  .  .  .  .  .  }
   679  .  .  .  .  .  .  .  .  .  .  }
   680  .  .  .  .  .  .  .  .  .  .  Lbrace: 39:26
   681  .  .  .  .  .  .  .  .  .  .  Elts: []ast.Expr (len = 1) {
   682  .  .  .  .  .  .  .  .  .  .  .  0: *ast.KeyValueExpr {
   683  .  .  .  .  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   684  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 40:4
   685  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
   686  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   687  .  .  .  .  .  .  .  .  .  .  .  .  }
   688  .  .  .  .  .  .  .  .  .  .  .  .  Colon: 40:8
   689  .  .  .  .  .  .  .  .  .  .  .  .  Value: *ast.CallExpr {
   690  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   691  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   692  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   693  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   694  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 40:10
   695  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "service"
   696  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 65)
   697  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   698  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   699  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 40:18
   700  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
   701  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   702  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   703  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   704  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   705  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 40:23
   706  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Endpoint"
   707  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   708  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   709  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   710  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   711  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 40:32
   712  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Copy"
   713  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   714  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   715  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   716  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 40:36
   717  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: nil
   718  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   719  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 40:37
   720  .  .  .  .  .  .  .  .  .  .  .  .  }
   721  .  .  .  .  .  .  .  .  .  .  .  }
   722  .  .  .  .  .  .  .  .  .  .  }
   723  .  .  .  .  .  .  .  .  .  .  Rbrace: 41:3
   724  .  .  .  .  .  .  .  .  .  }
   725  .  .  .  .  .  .  .  .  }
   726  .  .  .  .  .  .  .  }
   727  .  .  .  .  .  .  .  8: *ast.KeyValueExpr {
   728  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   729  .  .  .  .  .  .  .  .  .  NamePos: 42:3
   730  .  .  .  .  .  .  .  .  .  Name: "DesiredState"
   731  .  .  .  .  .  .  .  .  .  Obj: nil
   732  .  .  .  .  .  .  .  .  }
   733  .  .  .  .  .  .  .  .  Colon: 42:15
   734  .  .  .  .  .  .  .  .  Value: *ast.SelectorExpr {
   735  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   736  .  .  .  .  .  .  .  .  .  .  NamePos: 42:17
   737  .  .  .  .  .  .  .  .  .  .  Name: "api"
   738  .  .  .  .  .  .  .  .  .  .  Obj: nil
   739  .  .  .  .  .  .  .  .  .  }
   740  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   741  .  .  .  .  .  .  .  .  .  .  NamePos: 42:21
   742  .  .  .  .  .  .  .  .  .  .  Name: "TaskStateRunning"
   743  .  .  .  .  .  .  .  .  .  .  Obj: nil
   744  .  .  .  .  .  .  .  .  .  }
   745  .  .  .  .  .  .  .  .  }
   746  .  .  .  .  .  .  .  }
   747  .  .  .  .  .  .  .  9: *ast.KeyValueExpr {
   748  .  .  .  .  .  .  .  .  Key: *ast.Ident {
   749  .  .  .  .  .  .  .  .  .  NamePos: 43:3
   750  .  .  .  .  .  .  .  .  .  Name: "LogDriver"
   751  .  .  .  .  .  .  .  .  .  Obj: nil
   752  .  .  .  .  .  .  .  .  }
   753  .  .  .  .  .  .  .  .  Colon: 43:12
   754  .  .  .  .  .  .  .  .  Value: *ast.Ident {
   755  .  .  .  .  .  .  .  .  .  NamePos: 43:17
   756  .  .  .  .  .  .  .  .  .  Name: "logDriver"
   757  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 185)
   758  .  .  .  .  .  .  .  .  }
   759  .  .  .  .  .  .  .  }
   760  .  .  .  .  .  .  }
   761  .  .  .  .  .  .  Rbrace: 44:2
   762  .  .  .  .  .  }
   763  .  .  .  .  }
   764  .  .  .  }
   765  .  .  .  4: *ast.IfStmt {
   766  .  .  .  .  If: 47:2
   767  .  .  .  .  Init: nil
   768  .  .  .  .  Cond: *ast.BinaryExpr {
   769  .  .  .  .  .  X: *ast.Ident {
   770  .  .  .  .  .  .  NamePos: 47:5
   771  .  .  .  .  .  .  Name: "nodeID"
   772  .  .  .  .  .  .  Obj: *(obj @ 121)
   773  .  .  .  .  .  }
   774  .  .  .  .  .  OpPos: 47:12
   775  .  .  .  .  .  Op: !=
   776  .  .  .  .  .  Y: *ast.BasicLit {
   777  .  .  .  .  .  .  ValuePos: 47:15
   778  .  .  .  .  .  .  Kind: STRING
   779  .  .  .  .  .  .  Value: "\"\""
   780  .  .  .  .  .  }
   781  .  .  .  .  }
   782  .  .  .  .  Body: *ast.BlockStmt {
   783  .  .  .  .  .  Lbrace: 47:18
   784  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   785  .  .  .  .  .  .  0: *ast.AssignStmt {
   786  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   787  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   788  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   789  .  .  .  .  .  .  .  .  .  .  NamePos: 48:3
   790  .  .  .  .  .  .  .  .  .  .  Name: "task"
   791  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 406)
   792  .  .  .  .  .  .  .  .  .  }
   793  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   794  .  .  .  .  .  .  .  .  .  .  NamePos: 48:8
   795  .  .  .  .  .  .  .  .  .  .  Name: "NodeID"
   796  .  .  .  .  .  .  .  .  .  .  Obj: nil
   797  .  .  .  .  .  .  .  .  .  }
   798  .  .  .  .  .  .  .  .  }
   799  .  .  .  .  .  .  .  }
   800  .  .  .  .  .  .  .  TokPos: 48:15
   801  .  .  .  .  .  .  .  Tok: =
   802  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   803  .  .  .  .  .  .  .  .  0: *ast.Ident {
   804  .  .  .  .  .  .  .  .  .  NamePos: 48:17
   805  .  .  .  .  .  .  .  .  .  Name: "nodeID"
   806  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 121)
   807  .  .  .  .  .  .  .  .  }
   808  .  .  .  .  .  .  .  }
   809  .  .  .  .  .  .  }
   810  .  .  .  .  .  }
   811  .  .  .  .  .  Rbrace: 49:2
   812  .  .  .  .  }
   813  .  .  .  .  Else: nil
   814  .  .  .  }
   815  .  .  .  5: *ast.ReturnStmt {
   816  .  .  .  .  Return: 51:2
   817  .  .  .  .  Results: []ast.Expr (len = 1) {
   818  .  .  .  .  .  0: *ast.UnaryExpr {
   819  .  .  .  .  .  .  OpPos: 51:9
   820  .  .  .  .  .  .  Op: &
   821  .  .  .  .  .  .  X: *ast.Ident {
   822  .  .  .  .  .  .  .  NamePos: 51:10
   823  .  .  .  .  .  .  .  Name: "task"
   824  .  .  .  .  .  .  .  Obj: *(obj @ 406)
   825  .  .  .  .  .  .  }
   826  .  .  .  .  .  }
   827  .  .  .  .  }
   828  .  .  .  }
   829  .  .  }
   830  .  .  Rbrace: 52:1
   831  .  }
   832  }
     0  *ast.FuncDecl {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: 54:1
     5  .  .  .  .  Text: "// RestartCondition returns the restart condition to apply to this task."
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  Recv: nil
    10  .  Name: *ast.Ident {
    11  .  .  NamePos: 55:6
    12  .  .  Name: "RestartCondition"
    13  .  .  Obj: *ast.Object {
    14  .  .  .  Kind: func
    15  .  .  .  Name: "RestartCondition"
    16  .  .  .  Decl: *(obj @ 0)
    17  .  .  .  Data: nil
    18  .  .  .  Type: nil
    19  .  .  }
    20  .  }
    21  .  Type: *ast.FuncType {
    22  .  .  Func: 55:1
    23  .  .  Params: *ast.FieldList {
    24  .  .  .  Opening: 55:22
    25  .  .  .  List: []*ast.Field (len = 1) {
    26  .  .  .  .  0: *ast.Field {
    27  .  .  .  .  .  Doc: nil
    28  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    29  .  .  .  .  .  .  0: *ast.Ident {
    30  .  .  .  .  .  .  .  NamePos: 55:23
    31  .  .  .  .  .  .  .  Name: "task"
    32  .  .  .  .  .  .  .  Obj: *ast.Object {
    33  .  .  .  .  .  .  .  .  Kind: var
    34  .  .  .  .  .  .  .  .  Name: "task"
    35  .  .  .  .  .  .  .  .  Decl: *(obj @ 26)
    36  .  .  .  .  .  .  .  .  Data: nil
    37  .  .  .  .  .  .  .  .  Type: nil
    38  .  .  .  .  .  .  .  }
    39  .  .  .  .  .  .  }
    40  .  .  .  .  .  }
    41  .  .  .  .  .  Type: *ast.StarExpr {
    42  .  .  .  .  .  .  Star: 55:28
    43  .  .  .  .  .  .  X: *ast.SelectorExpr {
    44  .  .  .  .  .  .  .  X: *ast.Ident {
    45  .  .  .  .  .  .  .  .  NamePos: 55:29
    46  .  .  .  .  .  .  .  .  Name: "api"
    47  .  .  .  .  .  .  .  .  Obj: nil
    48  .  .  .  .  .  .  .  }
    49  .  .  .  .  .  .  .  Sel: *ast.Ident {
    50  .  .  .  .  .  .  .  .  NamePos: 55:33
    51  .  .  .  .  .  .  .  .  Name: "Task"
    52  .  .  .  .  .  .  .  .  Obj: nil
    53  .  .  .  .  .  .  .  }
    54  .  .  .  .  .  .  }
    55  .  .  .  .  .  }
    56  .  .  .  .  .  Tag: nil
    57  .  .  .  .  .  Comment: nil
    58  .  .  .  .  }
    59  .  .  .  }
    60  .  .  .  Closing: 55:37
    61  .  .  }
    62  .  .  Results: *ast.FieldList {
    63  .  .  .  Opening: -
    64  .  .  .  List: []*ast.Field (len = 1) {
    65  .  .  .  .  0: *ast.Field {
    66  .  .  .  .  .  Doc: nil
    67  .  .  .  .  .  Names: nil
    68  .  .  .  .  .  Type: *ast.SelectorExpr {
    69  .  .  .  .  .  .  X: *ast.Ident {
    70  .  .  .  .  .  .  .  NamePos: 55:39
    71  .  .  .  .  .  .  .  Name: "api"
    72  .  .  .  .  .  .  .  Obj: nil
    73  .  .  .  .  .  .  }
    74  .  .  .  .  .  .  Sel: *ast.Ident {
    75  .  .  .  .  .  .  .  NamePos: 55:43
    76  .  .  .  .  .  .  .  Name: "RestartPolicy_RestartCondition"
    77  .  .  .  .  .  .  .  Obj: nil
    78  .  .  .  .  .  .  }
    79  .  .  .  .  .  }
    80  .  .  .  .  .  Tag: nil
    81  .  .  .  .  .  Comment: nil
    82  .  .  .  .  }
    83  .  .  .  }
    84  .  .  .  Closing: -
    85  .  .  }
    86  .  }
    87  .  Body: *ast.BlockStmt {
    88  .  .  Lbrace: 55:74
    89  .  .  List: []ast.Stmt (len = 3) {
    90  .  .  .  0: *ast.AssignStmt {
    91  .  .  .  .  Lhs: []ast.Expr (len = 1) {
    92  .  .  .  .  .  0: *ast.Ident {
    93  .  .  .  .  .  .  NamePos: 56:2
    94  .  .  .  .  .  .  Name: "restartCondition"
    95  .  .  .  .  .  .  Obj: *ast.Object {
    96  .  .  .  .  .  .  .  Kind: var
    97  .  .  .  .  .  .  .  Name: "restartCondition"
    98  .  .  .  .  .  .  .  Decl: *(obj @ 90)
    99  .  .  .  .  .  .  .  Data: nil
   100  .  .  .  .  .  .  .  Type: nil
   101  .  .  .  .  .  .  }
   102  .  .  .  .  .  }
   103  .  .  .  .  }
   104  .  .  .  .  TokPos: 56:19
   105  .  .  .  .  Tok: :=
   106  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   107  .  .  .  .  .  0: *ast.SelectorExpr {
   108  .  .  .  .  .  .  X: *ast.SelectorExpr {
   109  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   110  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   111  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   112  .  .  .  .  .  .  .  .  .  .  NamePos: 56:22
   113  .  .  .  .  .  .  .  .  .  .  Name: "defaults"
   114  .  .  .  .  .  .  .  .  .  .  Obj: nil
   115  .  .  .  .  .  .  .  .  .  }
   116  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   117  .  .  .  .  .  .  .  .  .  .  NamePos: 56:31
   118  .  .  .  .  .  .  .  .  .  .  Name: "Service"
   119  .  .  .  .  .  .  .  .  .  .  Obj: nil
   120  .  .  .  .  .  .  .  .  .  }
   121  .  .  .  .  .  .  .  .  }
   122  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   123  .  .  .  .  .  .  .  .  .  NamePos: 56:39
   124  .  .  .  .  .  .  .  .  .  Name: "Task"
   125  .  .  .  .  .  .  .  .  .  Obj: nil
   126  .  .  .  .  .  .  .  .  }
   127  .  .  .  .  .  .  .  }
   128  .  .  .  .  .  .  .  Sel: *ast.Ident {
   129  .  .  .  .  .  .  .  .  NamePos: 56:44
   130  .  .  .  .  .  .  .  .  Name: "Restart"
   131  .  .  .  .  .  .  .  .  Obj: nil
   132  .  .  .  .  .  .  .  }
   133  .  .  .  .  .  .  }
   134  .  .  .  .  .  .  Sel: *ast.Ident {
   135  .  .  .  .  .  .  .  NamePos: 56:52
   136  .  .  .  .  .  .  .  Name: "Condition"
   137  .  .  .  .  .  .  .  Obj: nil
   138  .  .  .  .  .  .  }
   139  .  .  .  .  .  }
   140  .  .  .  .  }
   141  .  .  .  }
   142  .  .  .  1: *ast.IfStmt {
   143  .  .  .  .  If: 57:2
   144  .  .  .  .  Init: nil
   145  .  .  .  .  Cond: *ast.BinaryExpr {
   146  .  .  .  .  .  X: *ast.SelectorExpr {
   147  .  .  .  .  .  .  X: *ast.SelectorExpr {
   148  .  .  .  .  .  .  .  X: *ast.Ident {
   149  .  .  .  .  .  .  .  .  NamePos: 57:5
   150  .  .  .  .  .  .  .  .  Name: "task"
   151  .  .  .  .  .  .  .  .  Obj: *(obj @ 32)
   152  .  .  .  .  .  .  .  }
   153  .  .  .  .  .  .  .  Sel: *ast.Ident {
   154  .  .  .  .  .  .  .  .  NamePos: 57:10
   155  .  .  .  .  .  .  .  .  Name: "Spec"
   156  .  .  .  .  .  .  .  .  Obj: nil
   157  .  .  .  .  .  .  .  }
   158  .  .  .  .  .  .  }
   159  .  .  .  .  .  .  Sel: *ast.Ident {
   160  .  .  .  .  .  .  .  NamePos: 57:15
   161  .  .  .  .  .  .  .  Name: "Restart"
   162  .  .  .  .  .  .  .  Obj: nil
   163  .  .  .  .  .  .  }
   164  .  .  .  .  .  }
   165  .  .  .  .  .  OpPos: 57:23
   166  .  .  .  .  .  Op: !=
   167  .  .  .  .  .  Y: *ast.Ident {
   168  .  .  .  .  .  .  NamePos: 57:26
   169  .  .  .  .  .  .  Name: "nil"
   170  .  .  .  .  .  .  Obj: nil
   171  .  .  .  .  .  }
   172  .  .  .  .  }
   173  .  .  .  .  Body: *ast.BlockStmt {
   174  .  .  .  .  .  Lbrace: 57:30
   175  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   176  .  .  .  .  .  .  0: *ast.AssignStmt {
   177  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   178  .  .  .  .  .  .  .  .  0: *ast.Ident {
   179  .  .  .  .  .  .  .  .  .  NamePos: 58:3
   180  .  .  .  .  .  .  .  .  .  Name: "restartCondition"
   181  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 95)
   182  .  .  .  .  .  .  .  .  }
   183  .  .  .  .  .  .  .  }
   184  .  .  .  .  .  .  .  TokPos: 58:20
   185  .  .  .  .  .  .  .  Tok: =
   186  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   187  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   188  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   189  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   190  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   191  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 58:22
   192  .  .  .  .  .  .  .  .  .  .  .  .  Name: "task"
   193  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 32)
   194  .  .  .  .  .  .  .  .  .  .  .  }
   195  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   196  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 58:27
   197  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
   198  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   199  .  .  .  .  .  .  .  .  .  .  .  }
   200  .  .  .  .  .  .  .  .  .  .  }
   201  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   202  .  .  .  .  .  .  .  .  .  .  .  NamePos: 58:32
   203  .  .  .  .  .  .  .  .  .  .  .  Name: "Restart"
   204  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   205  .  .  .  .  .  .  .  .  .  .  }
   206  .  .  .  .  .  .  .  .  .  }
   207  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   208  .  .  .  .  .  .  .  .  .  .  NamePos: 58:40
   209  .  .  .  .  .  .  .  .  .  .  Name: "Condition"
   210  .  .  .  .  .  .  .  .  .  .  Obj: nil
   211  .  .  .  .  .  .  .  .  .  }
   212  .  .  .  .  .  .  .  .  }
   213  .  .  .  .  .  .  .  }
   214  .  .  .  .  .  .  }
   215  .  .  .  .  .  }
   216  .  .  .  .  .  Rbrace: 59:2
   217  .  .  .  .  }
   218  .  .  .  .  Else: nil
   219  .  .  .  }
   220  .  .  .  2: *ast.ReturnStmt {
   221  .  .  .  .  Return: 60:2
   222  .  .  .  .  Results: []ast.Expr (len = 1) {
   223  .  .  .  .  .  0: *ast.Ident {
   224  .  .  .  .  .  .  NamePos: 60:9
   225  .  .  .  .  .  .  Name: "restartCondition"
   226  .  .  .  .  .  .  Obj: *(obj @ 95)
   227  .  .  .  .  .  }
   228  .  .  .  .  }
   229  .  .  .  }
   230  .  .  }
   231  .  .  Rbrace: 61:1
   232  .  }
   233  }
     0  *ast.FuncDecl {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 10) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: 63:1
     5  .  .  .  .  Text: "// IsTaskDirty determines whether a task matches the given service's spec and"
     6  .  .  .  }
     7  .  .  .  1: *ast.Comment {
     8  .  .  .  .  Slash: 64:1
     9  .  .  .  .  Text: "// if the given node satisfies the placement constraints."
    10  .  .  .  }
    11  .  .  .  2: *ast.Comment {
    12  .  .  .  .  Slash: 65:1
    13  .  .  .  .  Text: "// Returns false if the spec version didn't change,"
    14  .  .  .  }
    15  .  .  .  3: *ast.Comment {
    16  .  .  .  .  Slash: 66:1
    17  .  .  .  .  Text: "// only the task placement constraints changed and the assigned node"
    18  .  .  .  }
    19  .  .  .  4: *ast.Comment {
    20  .  .  .  .  Slash: 67:1
    21  .  .  .  .  Text: "// satisfies the new constraints, or the service task spec and the endpoint spec"
    22  .  .  .  }
    23  .  .  .  5: *ast.Comment {
    24  .  .  .  .  Slash: 68:1
    25  .  .  .  .  Text: "// didn't change at all."
    26  .  .  .  }
    27  .  .  .  6: *ast.Comment {
    28  .  .  .  .  Slash: 69:1
    29  .  .  .  .  Text: "// Returns true otherwise."
    30  .  .  .  }
    31  .  .  .  7: *ast.Comment {
    32  .  .  .  .  Slash: 70:1
    33  .  .  .  .  Text: "// Note: for non-failed tasks with a container spec runtime that have already"
    34  .  .  .  }
    35  .  .  .  8: *ast.Comment {
    36  .  .  .  .  Slash: 71:1
    37  .  .  .  .  Text: "// pulled the required image (i.e., current state is between READY and"
    38  .  .  .  }
    39  .  .  .  9: *ast.Comment {
    40  .  .  .  .  Slash: 72:1
    41  .  .  .  .  Text: "// RUNNING inclusively), the value of the `PullOptions` is ignored."
    42  .  .  .  }
    43  .  .  }
    44  .  }
    45  .  Recv: nil
    46  .  Name: *ast.Ident {
    47  .  .  NamePos: 73:6
    48  .  .  Name: "IsTaskDirty"
    49  .  .  Obj: *ast.Object {
    50  .  .  .  Kind: func
    51  .  .  .  Name: "IsTaskDirty"
    52  .  .  .  Decl: *(obj @ 0)
    53  .  .  .  Data: nil
    54  .  .  .  Type: nil
    55  .  .  }
    56  .  }
    57  .  Type: *ast.FuncType {
    58  .  .  Func: 73:1
    59  .  .  Params: *ast.FieldList {
    60  .  .  .  Opening: 73:17
    61  .  .  .  List: []*ast.Field (len = 3) {
    62  .  .  .  .  0: *ast.Field {
    63  .  .  .  .  .  Doc: nil
    64  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    65  .  .  .  .  .  .  0: *ast.Ident {
    66  .  .  .  .  .  .  .  NamePos: 73:18
    67  .  .  .  .  .  .  .  Name: "s"
    68  .  .  .  .  .  .  .  Obj: *ast.Object {
    69  .  .  .  .  .  .  .  .  Kind: var
    70  .  .  .  .  .  .  .  .  Name: "s"
    71  .  .  .  .  .  .  .  .  Decl: *(obj @ 62)
    72  .  .  .  .  .  .  .  .  Data: nil
    73  .  .  .  .  .  .  .  .  Type: nil
    74  .  .  .  .  .  .  .  }
    75  .  .  .  .  .  .  }
    76  .  .  .  .  .  }
    77  .  .  .  .  .  Type: *ast.StarExpr {
    78  .  .  .  .  .  .  Star: 73:20
    79  .  .  .  .  .  .  X: *ast.SelectorExpr {
    80  .  .  .  .  .  .  .  X: *ast.Ident {
    81  .  .  .  .  .  .  .  .  NamePos: 73:21
    82  .  .  .  .  .  .  .  .  Name: "api"
    83  .  .  .  .  .  .  .  .  Obj: nil
    84  .  .  .  .  .  .  .  }
    85  .  .  .  .  .  .  .  Sel: *ast.Ident {
    86  .  .  .  .  .  .  .  .  NamePos: 73:25
    87  .  .  .  .  .  .  .  .  Name: "Service"
    88  .  .  .  .  .  .  .  .  Obj: nil
    89  .  .  .  .  .  .  .  }
    90  .  .  .  .  .  .  }
    91  .  .  .  .  .  }
    92  .  .  .  .  .  Tag: nil
    93  .  .  .  .  .  Comment: nil
    94  .  .  .  .  }
    95  .  .  .  .  1: *ast.Field {
    96  .  .  .  .  .  Doc: nil
    97  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    98  .  .  .  .  .  .  0: *ast.Ident {
    99  .  .  .  .  .  .  .  NamePos: 73:34
   100  .  .  .  .  .  .  .  Name: "t"
   101  .  .  .  .  .  .  .  Obj: *ast.Object {
   102  .  .  .  .  .  .  .  .  Kind: var
   103  .  .  .  .  .  .  .  .  Name: "t"
   104  .  .  .  .  .  .  .  .  Decl: *(obj @ 95)
   105  .  .  .  .  .  .  .  .  Data: nil
   106  .  .  .  .  .  .  .  .  Type: nil
   107  .  .  .  .  .  .  .  }
   108  .  .  .  .  .  .  }
   109  .  .  .  .  .  }
   110  .  .  .  .  .  Type: *ast.StarExpr {
   111  .  .  .  .  .  .  Star: 73:36
   112  .  .  .  .  .  .  X: *ast.SelectorExpr {
   113  .  .  .  .  .  .  .  X: *ast.Ident {
   114  .  .  .  .  .  .  .  .  NamePos: 73:37
   115  .  .  .  .  .  .  .  .  Name: "api"
   116  .  .  .  .  .  .  .  .  Obj: nil
   117  .  .  .  .  .  .  .  }
   118  .  .  .  .  .  .  .  Sel: *ast.Ident {
   119  .  .  .  .  .  .  .  .  NamePos: 73:41
   120  .  .  .  .  .  .  .  .  Name: "Task"
   121  .  .  .  .  .  .  .  .  Obj: nil
   122  .  .  .  .  .  .  .  }
   123  .  .  .  .  .  .  }
   124  .  .  .  .  .  }
   125  .  .  .  .  .  Tag: nil
   126  .  .  .  .  .  Comment: nil
   127  .  .  .  .  }
   128  .  .  .  .  2: *ast.Field {
   129  .  .  .  .  .  Doc: nil
   130  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   131  .  .  .  .  .  .  0: *ast.Ident {
   132  .  .  .  .  .  .  .  NamePos: 73:47
   133  .  .  .  .  .  .  .  Name: "n"
   134  .  .  .  .  .  .  .  Obj: *ast.Object {
   135  .  .  .  .  .  .  .  .  Kind: var
   136  .  .  .  .  .  .  .  .  Name: "n"
   137  .  .  .  .  .  .  .  .  Decl: *(obj @ 128)
   138  .  .  .  .  .  .  .  .  Data: nil
   139  .  .  .  .  .  .  .  .  Type: nil
   140  .  .  .  .  .  .  .  }
   141  .  .  .  .  .  .  }
   142  .  .  .  .  .  }
   143  .  .  .  .  .  Type: *ast.StarExpr {
   144  .  .  .  .  .  .  Star: 73:49
   145  .  .  .  .  .  .  X: *ast.SelectorExpr {
   146  .  .  .  .  .  .  .  X: *ast.Ident {
   147  .  .  .  .  .  .  .  .  NamePos: 73:50
   148  .  .  .  .  .  .  .  .  Name: "api"
   149  .  .  .  .  .  .  .  .  Obj: nil
   150  .  .  .  .  .  .  .  }
   151  .  .  .  .  .  .  .  Sel: *ast.Ident {
   152  .  .  .  .  .  .  .  .  NamePos: 73:54
   153  .  .  .  .  .  .  .  .  Name: "Node"
   154  .  .  .  .  .  .  .  .  Obj: nil
   155  .  .  .  .  .  .  .  }
   156  .  .  .  .  .  .  }
   157  .  .  .  .  .  }
   158  .  .  .  .  .  Tag: nil
   159  .  .  .  .  .  Comment: nil
   160  .  .  .  .  }
   161  .  .  .  }
   162  .  .  .  Closing: 73:58
   163  .  .  }
   164  .  .  Results: *ast.FieldList {
   165  .  .  .  Opening: -
   166  .  .  .  List: []*ast.Field (len = 1) {
   167  .  .  .  .  0: *ast.Field {
   168  .  .  .  .  .  Doc: nil
   169  .  .  .  .  .  Names: nil
   170  .  .  .  .  .  Type: *ast.Ident {
   171  .  .  .  .  .  .  NamePos: 73:60
   172  .  .  .  .  .  .  Name: "bool"
   173  .  .  .  .  .  .  Obj: nil
   174  .  .  .  .  .  }
   175  .  .  .  .  .  Tag: nil
   176  .  .  .  .  .  Comment: nil
   177  .  .  .  .  }
   178  .  .  .  }
   179  .  .  .  Closing: -
   180  .  .  }
   181  .  }
   182  .  Body: *ast.BlockStmt {
   183  .  .  Lbrace: 73:65
   184  .  .  List: []ast.Stmt (len = 7) {
   185  .  .  .  0: *ast.IfStmt {
   186  .  .  .  .  If: 77:2
   187  .  .  .  .  Init: nil
   188  .  .  .  .  Cond: *ast.BinaryExpr {
   189  .  .  .  .  .  X: *ast.BinaryExpr {
   190  .  .  .  .  .  .  X: *ast.BinaryExpr {
   191  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   192  .  .  .  .  .  .  .  .  X: *ast.Ident {
   193  .  .  .  .  .  .  .  .  .  NamePos: 77:5
   194  .  .  .  .  .  .  .  .  .  Name: "t"
   195  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 101)
   196  .  .  .  .  .  .  .  .  }
   197  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   198  .  .  .  .  .  .  .  .  .  NamePos: 77:7
   199  .  .  .  .  .  .  .  .  .  Name: "SpecVersion"
   200  .  .  .  .  .  .  .  .  .  Obj: nil
   201  .  .  .  .  .  .  .  .  }
   202  .  .  .  .  .  .  .  }
   203  .  .  .  .  .  .  .  OpPos: 77:19
   204  .  .  .  .  .  .  .  Op: !=
   205  .  .  .  .  .  .  .  Y: *ast.Ident {
   206  .  .  .  .  .  .  .  .  NamePos: 77:22
   207  .  .  .  .  .  .  .  .  Name: "nil"
   208  .  .  .  .  .  .  .  .  Obj: nil
   209  .  .  .  .  .  .  .  }
   210  .  .  .  .  .  .  }
   211  .  .  .  .  .  .  OpPos: 77:26
   212  .  .  .  .  .  .  Op: &&
   213  .  .  .  .  .  .  Y: *ast.BinaryExpr {
   214  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   215  .  .  .  .  .  .  .  .  X: *ast.Ident {
   216  .  .  .  .  .  .  .  .  .  NamePos: 77:29
   217  .  .  .  .  .  .  .  .  .  Name: "s"
   218  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 68)
   219  .  .  .  .  .  .  .  .  }
   220  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   221  .  .  .  .  .  .  .  .  .  NamePos: 77:31
   222  .  .  .  .  .  .  .  .  .  Name: "SpecVersion"
   223  .  .  .  .  .  .  .  .  .  Obj: nil
   224  .  .  .  .  .  .  .  .  }
   225  .  .  .  .  .  .  .  }
   226  .  .  .  .  .  .  .  OpPos: 77:43
   227  .  .  .  .  .  .  .  Op: !=
   228  .  .  .  .  .  .  .  Y: *ast.Ident {
   229  .  .  .  .  .  .  .  .  NamePos: 77:46
   230  .  .  .  .  .  .  .  .  Name: "nil"
   231  .  .  .  .  .  .  .  .  Obj: nil
   232  .  .  .  .  .  .  .  }
   233  .  .  .  .  .  .  }
   234  .  .  .  .  .  }
   235  .  .  .  .  .  OpPos: 77:50
   236  .  .  .  .  .  Op: &&
   237  .  .  .  .  .  Y: *ast.BinaryExpr {
   238  .  .  .  .  .  .  X: *ast.StarExpr {
   239  .  .  .  .  .  .  .  Star: 77:53
   240  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   241  .  .  .  .  .  .  .  .  X: *ast.Ident {
   242  .  .  .  .  .  .  .  .  .  NamePos: 77:54
   243  .  .  .  .  .  .  .  .  .  Name: "s"
   244  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 68)
   245  .  .  .  .  .  .  .  .  }
   246  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   247  .  .  .  .  .  .  .  .  .  NamePos: 77:56
   248  .  .  .  .  .  .  .  .  .  Name: "SpecVersion"
   249  .  .  .  .  .  .  .  .  .  Obj: nil
   250  .  .  .  .  .  .  .  .  }
   251  .  .  .  .  .  .  .  }
   252  .  .  .  .  .  .  }
   253  .  .  .  .  .  .  OpPos: 77:68
   254  .  .  .  .  .  .  Op: ==
   255  .  .  .  .  .  .  Y: *ast.StarExpr {
   256  .  .  .  .  .  .  .  Star: 77:71
   257  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   258  .  .  .  .  .  .  .  .  X: *ast.Ident {
   259  .  .  .  .  .  .  .  .  .  NamePos: 77:72
   260  .  .  .  .  .  .  .  .  .  Name: "t"
   261  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 101)
   262  .  .  .  .  .  .  .  .  }
   263  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   264  .  .  .  .  .  .  .  .  .  NamePos: 77:74
   265  .  .  .  .  .  .  .  .  .  Name: "SpecVersion"
   266  .  .  .  .  .  .  .  .  .  Obj: nil
   267  .  .  .  .  .  .  .  .  }
   268  .  .  .  .  .  .  .  }
   269  .  .  .  .  .  .  }
   270  .  .  .  .  .  }
   271  .  .  .  .  }
   272  .  .  .  .  Body: *ast.BlockStmt {
   273  .  .  .  .  .  Lbrace: 77:86
   274  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   275  .  .  .  .  .  .  0: *ast.ReturnStmt {
   276  .  .  .  .  .  .  .  Return: 78:3
   277  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   278  .  .  .  .  .  .  .  .  0: *ast.Ident {
   279  .  .  .  .  .  .  .  .  .  NamePos: 78:10
   280  .  .  .  .  .  .  .  .  .  Name: "false"
   281  .  .  .  .  .  .  .  .  .  Obj: nil
   282  .  .  .  .  .  .  .  .  }
   283  .  .  .  .  .  .  .  }
   284  .  .  .  .  .  .  }
   285  .  .  .  .  .  }
   286  .  .  .  .  .  Rbrace: 79:2
   287  .  .  .  .  }
   288  .  .  .  .  Else: nil
   289  .  .  .  }
   290  .  .  .  1: *ast.AssignStmt {
   291  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   292  .  .  .  .  .  0: *ast.Ident {
   293  .  .  .  .  .  .  NamePos: 82:2
   294  .  .  .  .  .  .  Name: "serviceTaskSpec"
   295  .  .  .  .  .  .  Obj: *ast.Object {
   296  .  .  .  .  .  .  .  Kind: var
   297  .  .  .  .  .  .  .  Name: "serviceTaskSpec"
   298  .  .  .  .  .  .  .  Decl: *(obj @ 290)
   299  .  .  .  .  .  .  .  Data: nil
   300  .  .  .  .  .  .  .  Type: nil
   301  .  .  .  .  .  .  }
   302  .  .  .  .  .  }
   303  .  .  .  .  }
   304  .  .  .  .  TokPos: 82:18
   305  .  .  .  .  Tok: :=
   306  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   307  .  .  .  .  .  0: *ast.StarExpr {
   308  .  .  .  .  .  .  Star: 82:21
   309  .  .  .  .  .  .  X: *ast.CallExpr {
   310  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   311  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   312  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   313  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   314  .  .  .  .  .  .  .  .  .  .  .  NamePos: 82:22
   315  .  .  .  .  .  .  .  .  .  .  .  Name: "s"
   316  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 68)
   317  .  .  .  .  .  .  .  .  .  .  }
   318  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   319  .  .  .  .  .  .  .  .  .  .  .  NamePos: 82:24
   320  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
   321  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   322  .  .  .  .  .  .  .  .  .  .  }
   323  .  .  .  .  .  .  .  .  .  }
   324  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   325  .  .  .  .  .  .  .  .  .  .  NamePos: 82:29
   326  .  .  .  .  .  .  .  .  .  .  Name: "Task"
   327  .  .  .  .  .  .  .  .  .  .  Obj: nil
   328  .  .  .  .  .  .  .  .  .  }
   329  .  .  .  .  .  .  .  .  }
   330  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   331  .  .  .  .  .  .  .  .  .  NamePos: 82:34
   332  .  .  .  .  .  .  .  .  .  Name: "Copy"
   333  .  .  .  .  .  .  .  .  .  Obj: nil
   334  .  .  .  .  .  .  .  .  }
   335  .  .  .  .  .  .  .  }
   336  .  .  .  .  .  .  .  Lparen: 82:38
   337  .  .  .  .  .  .  .  Args: nil
   338  .  .  .  .  .  .  .  Ellipsis: -
   339  .  .  .  .  .  .  .  Rparen: 82:39
   340  .  .  .  .  .  .  }
   341  .  .  .  .  .  }
   342  .  .  .  .  }
   343  .  .  .  }
   344  .  .  .  2: *ast.IfStmt {
   345  .  .  .  .  If: 86:2
   346  .  .  .  .  Init: nil
   347  .  .  .  .  Cond: *ast.BinaryExpr {
   348  .  .  .  .  .  X: *ast.CallExpr {
   349  .  .  .  .  .  .  Fun: *ast.Ident {
   350  .  .  .  .  .  .  .  NamePos: 86:5
   351  .  .  .  .  .  .  .  Name: "IsTaskDirtyPlacementConstraintsOnly"
   352  .  .  .  .  .  .  .  Obj: *ast.Object {
   353  .  .  .  .  .  .  .  .  Kind: func
   354  .  .  .  .  .  .  .  .  Name: "IsTaskDirtyPlacementConstraintsOnly"
   355  .  .  .  .  .  .  .  .  Decl: *ast.FuncDecl {
   356  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   357  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 2) {
   358  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   359  .  .  .  .  .  .  .  .  .  .  .  .  Slash: 126:1
   360  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// IsTaskDirtyPlacementConstraintsOnly checks if the Placement field alone"
   361  .  .  .  .  .  .  .  .  .  .  .  }
   362  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Comment {
   363  .  .  .  .  .  .  .  .  .  .  .  .  Slash: 127:1
   364  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// in the spec has changed."
   365  .  .  .  .  .  .  .  .  .  .  .  }
   366  .  .  .  .  .  .  .  .  .  .  }
   367  .  .  .  .  .  .  .  .  .  }
   368  .  .  .  .  .  .  .  .  .  Recv: nil
   369  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
   370  .  .  .  .  .  .  .  .  .  .  NamePos: 128:6
   371  .  .  .  .  .  .  .  .  .  .  Name: "IsTaskDirtyPlacementConstraintsOnly"
   372  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 352)
   373  .  .  .  .  .  .  .  .  .  }
   374  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   375  .  .  .  .  .  .  .  .  .  .  Func: 128:1
   376  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   377  .  .  .  .  .  .  .  .  .  .  .  Opening: 128:41
   378  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   379  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   380  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   381  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   382  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   383  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 128:42
   384  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "serviceTaskSpec"
   385  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   386  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   387  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "serviceTaskSpec"
   388  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 379)
   389  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   390  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   391  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   392  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   393  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   394  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.SelectorExpr {
   395  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   396  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 128:58
   397  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "api"
   398  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   399  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   400  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   401  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 128:62
   402  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "TaskSpec"
   403  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   404  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   405  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   406  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   407  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   408  .  .  .  .  .  .  .  .  .  .  .  .  }
   409  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
   410  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   411  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   412  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   413  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 128:72
   414  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   415  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   416  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   417  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   418  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 409)
   419  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   420  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   421  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   422  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   423  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   424  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   425  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Star: 128:74
   426  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   427  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   428  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 128:75
   429  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "api"
   430  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   431  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   432  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   433  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 128:79
   434  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Task"
   435  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   436  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   437  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   438  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   439  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   440  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   441  .  .  .  .  .  .  .  .  .  .  .  .  }
   442  .  .  .  .  .  .  .  .  .  .  .  }
   443  .  .  .  .  .  .  .  .  .  .  .  Closing: 128:83
   444  .  .  .  .  .  .  .  .  .  .  }
   445  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
   446  .  .  .  .  .  .  .  .  .  .  .  Opening: -
   447  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   448  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   449  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   450  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: nil
   451  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   452  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 128:85
   453  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "bool"
   454  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   455  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   456  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   457  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   458  .  .  .  .  .  .  .  .  .  .  .  .  }
   459  .  .  .  .  .  .  .  .  .  .  .  }
   460  .  .  .  .  .  .  .  .  .  .  .  Closing: -
   461  .  .  .  .  .  .  .  .  .  .  }
   462  .  .  .  .  .  .  .  .  .  }
   463  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   464  .  .  .  .  .  .  .  .  .  .  Lbrace: 128:90
   465  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 3) {
   466  .  .  .  .  .  .  .  .  .  .  .  0: *ast.IfStmt {
   467  .  .  .  .  .  .  .  .  .  .  .  .  If: 130:2
   468  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil
   469  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.CallExpr {
   470  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   471  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   472  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 130:5
   473  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "reflect"
   474  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   475  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   476  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   477  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 130:13
   478  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "DeepEqual"
   479  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   480  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   481  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   482  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 130:22
   483  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   484  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   485  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   486  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 130:23
   487  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "serviceTaskSpec"
   488  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 385)
   489  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   490  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   491  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 130:39
   492  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Placement"
   493  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   494  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   495  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   496  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
   497  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   498  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   499  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 130:50
   500  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   501  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 415)
   502  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   503  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   504  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 130:52
   505  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
   506  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   507  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   508  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   509  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   510  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 130:57
   511  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Placement"
   512  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   513  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   514  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   515  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   516  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   517  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 130:66
   518  .  .  .  .  .  .  .  .  .  .  .  .  }
   519  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   520  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: 130:68
   521  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   522  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   523  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: 131:3
   524  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   525  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   526  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 131:10
   527  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "false"
   528  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   529  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   530  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   531  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   532  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   533  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: 132:2
   534  .  .  .  .  .  .  .  .  .  .  .  .  }
   535  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil
   536  .  .  .  .  .  .  .  .  .  .  .  }
   537  .  .  .  .  .  .  .  .  .  .  .  1: *ast.AssignStmt {
   538  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   539  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   540  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   541  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 136:2
   542  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "serviceTaskSpec"
   543  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 385)
   544  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   545  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   546  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 136:18
   547  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Placement"
   548  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   549  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   550  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   551  .  .  .  .  .  .  .  .  .  .  .  .  }
   552  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: 136:28
   553  .  .  .  .  .  .  .  .  .  .  .  .  Tok: =
   554  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   555  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   556  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   557  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   558  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 136:30
   559  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   560  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 415)
   561  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   562  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   563  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 136:32
   564  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
   565  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   566  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   567  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   568  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   569  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 136:37
   570  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Placement"
   571  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   572  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   573  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   574  .  .  .  .  .  .  .  .  .  .  .  .  }
   575  .  .  .  .  .  .  .  .  .  .  .  }
   576  .  .  .  .  .  .  .  .  .  .  .  2: *ast.ReturnStmt {
   577  .  .  .  .  .  .  .  .  .  .  .  .  Return: 137:2
   578  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   579  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   580  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   581  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   582  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 137:9
   583  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "reflect"
   584  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   585  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   586  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   587  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 137:17
   588  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "DeepEqual"
   589  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   590  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   591  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   592  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 137:26
   593  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   594  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   595  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 137:27
   596  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "serviceTaskSpec"
   597  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 385)
   598  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   599  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
   600  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   601  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 137:44
   602  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   603  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 415)
   604  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   605  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   606  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 137:46
   607  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
   608  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   609  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   610  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   611  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   612  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   613  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 137:50
   614  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   615  .  .  .  .  .  .  .  .  .  .  .  .  }
   616  .  .  .  .  .  .  .  .  .  .  .  }
   617  .  .  .  .  .  .  .  .  .  .  }
   618  .  .  .  .  .  .  .  .  .  .  Rbrace: 138:1
   619  .  .  .  .  .  .  .  .  .  }
   620  .  .  .  .  .  .  .  .  }
   621  .  .  .  .  .  .  .  .  Data: nil
   622  .  .  .  .  .  .  .  .  Type: nil
   623  .  .  .  .  .  .  .  }
   624  .  .  .  .  .  .  }
   625  .  .  .  .  .  .  Lparen: 86:40
   626  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   627  .  .  .  .  .  .  .  0: *ast.Ident {
   628  .  .  .  .  .  .  .  .  NamePos: 86:41
   629  .  .  .  .  .  .  .  .  Name: "serviceTaskSpec"
   630  .  .  .  .  .  .  .  .  Obj: *(obj @ 295)
   631  .  .  .  .  .  .  .  }
   632  .  .  .  .  .  .  .  1: *ast.Ident {
   633  .  .  .  .  .  .  .  .  NamePos: 86:58
   634  .  .  .  .  .  .  .  .  Name: "t"
   635  .  .  .  .  .  .  .  .  Obj: *(obj @ 101)
   636  .  .  .  .  .  .  .  }
   637  .  .  .  .  .  .  }
   638  .  .  .  .  .  .  Ellipsis: -
   639  .  .  .  .  .  .  Rparen: 86:59
   640  .  .  .  .  .  }
   641  .  .  .  .  .  OpPos: 86:61
   642  .  .  .  .  .  Op: &&
   643  .  .  .  .  .  Y: *ast.CallExpr {
   644  .  .  .  .  .  .  Fun: *ast.Ident {
   645  .  .  .  .  .  .  .  NamePos: 86:64
   646  .  .  .  .  .  .  .  Name: "nodeMatches"
   647  .  .  .  .  .  .  .  Obj: *ast.Object {
   648  .  .  .  .  .  .  .  .  Kind: func
   649  .  .  .  .  .  .  .  .  Name: "nodeMatches"
   650  .  .  .  .  .  .  .  .  Decl: *ast.FuncDecl {
   651  .  .  .  .  .  .  .  .  .  Doc: *ast.CommentGroup {
   652  .  .  .  .  .  .  .  .  .  .  List: []*ast.Comment (len = 2) {
   653  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Comment {
   654  .  .  .  .  .  .  .  .  .  .  .  .  Slash: 115:1
   655  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// Checks if the current assigned node matches the Placement.Constraints"
   656  .  .  .  .  .  .  .  .  .  .  .  }
   657  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Comment {
   658  .  .  .  .  .  .  .  .  .  .  .  .  Slash: 116:1
   659  .  .  .  .  .  .  .  .  .  .  .  .  Text: "// specified in the task spec for Updater.newService."
   660  .  .  .  .  .  .  .  .  .  .  .  }
   661  .  .  .  .  .  .  .  .  .  .  }
   662  .  .  .  .  .  .  .  .  .  }
   663  .  .  .  .  .  .  .  .  .  Recv: nil
   664  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
   665  .  .  .  .  .  .  .  .  .  .  NamePos: 117:6
   666  .  .  .  .  .  .  .  .  .  .  Name: "nodeMatches"
   667  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 647)
   668  .  .  .  .  .  .  .  .  .  }
   669  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   670  .  .  .  .  .  .  .  .  .  .  Func: 117:1
   671  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   672  .  .  .  .  .  .  .  .  .  .  .  Opening: 117:17
   673  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
   674  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   675  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   676  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   677  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   678  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 117:18
   679  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "s"
   680  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   681  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   682  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "s"
   683  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 674)
   684  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   685  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   686  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   687  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   688  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   689  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   690  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Star: 117:20
   691  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   692  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   693  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 117:21
   694  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "api"
   695  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   696  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   697  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   698  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 117:25
   699  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Service"
   700  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   701  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   702  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   703  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   704  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   705  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   706  .  .  .  .  .  .  .  .  .  .  .  .  }
   707  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
   708  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   709  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   710  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   711  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 117:34
   712  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "n"
   713  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   714  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   715  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "n"
   716  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 707)
   717  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   718  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   719  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   720  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   721  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   722  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   723  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Star: 117:36
   724  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   725  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   726  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 117:37
   727  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "api"
   728  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   729  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   730  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   731  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 117:41
   732  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Node"
   733  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   734  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   735  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   736  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   737  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   738  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   739  .  .  .  .  .  .  .  .  .  .  .  .  }
   740  .  .  .  .  .  .  .  .  .  .  .  }
   741  .  .  .  .  .  .  .  .  .  .  .  Closing: 117:45
   742  .  .  .  .  .  .  .  .  .  .  }
   743  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
   744  .  .  .  .  .  .  .  .  .  .  .  Opening: -
   745  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   746  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   747  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   748  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: nil
   749  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
   750  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 117:47
   751  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "bool"
   752  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   753  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   754  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   755  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   756  .  .  .  .  .  .  .  .  .  .  .  .  }
   757  .  .  .  .  .  .  .  .  .  .  .  }
   758  .  .  .  .  .  .  .  .  .  .  .  Closing: -
   759  .  .  .  .  .  .  .  .  .  .  }
   760  .  .  .  .  .  .  .  .  .  }
   761  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   762  .  .  .  .  .  .  .  .  .  .  Lbrace: 117:52
   763  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 3) {
   764  .  .  .  .  .  .  .  .  .  .  .  0: *ast.IfStmt {
   765  .  .  .  .  .  .  .  .  .  .  .  .  If: 118:2
   766  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil
   767  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   768  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   769  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 118:5
   770  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "n"
   771  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 713)
   772  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   773  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 118:7
   774  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: ==
   775  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   776  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 118:10
   777  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
   778  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   779  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   780  .  .  .  .  .  .  .  .  .  .  .  .  }
   781  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   782  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: 118:14
   783  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   784  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   785  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: 119:3
   786  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   787  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   788  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 119:10
   789  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "false"
   790  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   791  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   792  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   793  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   794  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   795  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: 120:2
   796  .  .  .  .  .  .  .  .  .  .  .  .  }
   797  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil
   798  .  .  .  .  .  .  .  .  .  .  .  }
   799  .  .  .  .  .  .  .  .  .  .  .  1: *ast.AssignStmt {
   800  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
   801  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   802  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 122:2
   803  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "constraints"
   804  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   805  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   806  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "constraints"
   807  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 799)
   808  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   809  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   810  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   811  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   812  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   813  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 122:15
   814  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "_"
   815  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   816  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   817  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "_"
   818  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 799)
   819  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   820  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   821  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   822  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   823  .  .  .  .  .  .  .  .  .  .  .  .  }
   824  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: 122:17
   825  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=
   826  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   827  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   828  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   829  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   830  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 122:20
   831  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "constraint"
   832  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   833  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   834  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   835  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 122:31
   836  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Parse"
   837  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   838  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   839  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   840  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 122:36
   841  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   842  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   843  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   844  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   845  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   846  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   847  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 122:37
   848  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "s"
   849  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 680)
   850  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   851  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   852  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 122:39
   853  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
   854  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   855  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   856  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   857  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   858  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 122:44
   859  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Task"
   860  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   861  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   862  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   863  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   864  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 122:49
   865  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Placement"
   866  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   867  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   868  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   869  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   870  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 122:59
   871  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Constraints"
   872  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   873  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   874  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   875  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   876  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   877  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 122:70
   878  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   879  .  .  .  .  .  .  .  .  .  .  .  .  }
   880  .  .  .  .  .  .  .  .  .  .  .  }
   881  .  .  .  .  .  .  .  .  .  .  .  2: *ast.ReturnStmt {
   882  .  .  .  .  .  .  .  .  .  .  .  .  Return: 123:2
   883  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   884  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CallExpr {
   885  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   886  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   887  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 123:9
   888  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "constraint"
   889  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   890  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   891  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   892  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 123:20
   893  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "NodeMatches"
   894  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   895  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   896  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   897  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 123:31
   898  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   899  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   900  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 123:32
   901  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "constraints"
   902  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 804)
   903  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   904  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
   905  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 123:45
   906  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "n"
   907  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 713)
   908  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   909  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   910  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
   911  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 123:46
   912  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   913  .  .  .  .  .  .  .  .  .  .  .  .  }
   914  .  .  .  .  .  .  .  .  .  .  .  }
   915  .  .  .  .  .  .  .  .  .  .  }
   916  .  .  .  .  .  .  .  .  .  .  Rbrace: 124:1
   917  .  .  .  .  .  .  .  .  .  }
   918  .  .  .  .  .  .  .  .  }
   919  .  .  .  .  .  .  .  .  Data: nil
   920  .  .  .  .  .  .  .  .  Type: nil
   921  .  .  .  .  .  .  .  }
   922  .  .  .  .  .  .  }
   923  .  .  .  .  .  .  Lparen: 86:75
   924  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   925  .  .  .  .  .  .  .  0: *ast.Ident {
   926  .  .  .  .  .  .  .  .  NamePos: 86:76
   927  .  .  .  .  .  .  .  .  Name: "s"
   928  .  .  .  .  .  .  .  .  Obj: *(obj @ 68)
   929  .  .  .  .  .  .  .  }
   930  .  .  .  .  .  .  .  1: *ast.Ident {
   931  .  .  .  .  .  .  .  .  NamePos: 86:79
   932  .  .  .  .  .  .  .  .  Name: "n"
   933  .  .  .  .  .  .  .  .  Obj: *(obj @ 134)
   934  .  .  .  .  .  .  .  }
   935  .  .  .  .  .  .  }
   936  .  .  .  .  .  .  Ellipsis: -
   937  .  .  .  .  .  .  Rparen: 86:80
   938  .  .  .  .  .  }
   939  .  .  .  .  }
   940  .  .  .  .  Body: *ast.BlockStmt {
   941  .  .  .  .  .  Lbrace: 86:82
   942  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   943  .  .  .  .  .  .  0: *ast.ReturnStmt {
   944  .  .  .  .  .  .  .  Return: 87:3
   945  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   946  .  .  .  .  .  .  .  .  0: *ast.Ident {
   947  .  .  .  .  .  .  .  .  .  NamePos: 87:10
   948  .  .  .  .  .  .  .  .  .  Name: "false"
   949  .  .  .  .  .  .  .  .  .  Obj: nil
   950  .  .  .  .  .  .  .  .  }
   951  .  .  .  .  .  .  .  }
   952  .  .  .  .  .  .  }
   953  .  .  .  .  .  }
   954  .  .  .  .  .  Rbrace: 88:2
   955  .  .  .  .  }
   956  .  .  .  .  Else: nil
   957  .  .  .  }
   958  .  .  .  3: *ast.AssignStmt {
   959  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   960  .  .  .  .  .  0: *ast.Ident {
   961  .  .  .  .  .  .  NamePos: 98:2
   962  .  .  .  .  .  .  Name: "currentState"
   963  .  .  .  .  .  .  Obj: *ast.Object {
   964  .  .  .  .  .  .  .  Kind: var
   965  .  .  .  .  .  .  .  Name: "currentState"
   966  .  .  .  .  .  .  .  Decl: *(obj @ 958)
   967  .  .  .  .  .  .  .  Data: nil
   968  .  .  .  .  .  .  .  Type: nil
   969  .  .  .  .  .  .  }
   970  .  .  .  .  .  }
   971  .  .  .  .  }
   972  .  .  .  .  TokPos: 98:15
   973  .  .  .  .  Tok: :=
   974  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   975  .  .  .  .  .  0: *ast.SelectorExpr {
   976  .  .  .  .  .  .  X: *ast.SelectorExpr {
   977  .  .  .  .  .  .  .  X: *ast.Ident {
   978  .  .  .  .  .  .  .  .  NamePos: 98:18
   979  .  .  .  .  .  .  .  .  Name: "t"
   980  .  .  .  .  .  .  .  .  Obj: *(obj @ 101)
   981  .  .  .  .  .  .  .  }
   982  .  .  .  .  .  .  .  Sel: *ast.Ident {
   983  .  .  .  .  .  .  .  .  NamePos: 98:20
   984  .  .  .  .  .  .  .  .  Name: "Status"
   985  .  .  .  .  .  .  .  .  Obj: nil
   986  .  .  .  .  .  .  .  }
   987  .  .  .  .  .  .  }
   988  .  .  .  .  .  .  Sel: *ast.Ident {
   989  .  .  .  .  .  .  .  NamePos: 98:27
   990  .  .  .  .  .  .  .  Name: "State"
   991  .  .  .  .  .  .  .  Obj: nil
   992  .  .  .  .  .  .  }
   993  .  .  .  .  .  }
   994  .  .  .  .  }
   995  .  .  .  }
   996  .  .  .  4: *ast.AssignStmt {
   997  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   998  .  .  .  .  .  0: *ast.Ident {
   999  .  .  .  .  .  .  NamePos: 103:2
  1000  .  .  .  .  .  .  Name: "ignorePullOpts"
  1001  .  .  .  .  .  .  Obj: *ast.Object {
  1002  .  .  .  .  .  .  .  Kind: var
  1003  .  .  .  .  .  .  .  Name: "ignorePullOpts"
  1004  .  .  .  .  .  .  .  Decl: *(obj @ 996)
  1005  .  .  .  .  .  .  .  Data: nil
  1006  .  .  .  .  .  .  .  Type: nil
  1007  .  .  .  .  .  .  }
  1008  .  .  .  .  .  }
  1009  .  .  .  .  }
  1010  .  .  .  .  TokPos: 103:17
  1011  .  .  .  .  Tok: :=
  1012  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1013  .  .  .  .  .  0: *ast.BinaryExpr {
  1014  .  .  .  .  .  .  X: *ast.BinaryExpr {
  1015  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
  1016  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1017  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1018  .  .  .  .  .  .  .  .  .  .  NamePos: 103:20
  1019  .  .  .  .  .  .  .  .  .  .  Name: "t"
  1020  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 101)
  1021  .  .  .  .  .  .  .  .  .  }
  1022  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1023  .  .  .  .  .  .  .  .  .  .  NamePos: 103:22
  1024  .  .  .  .  .  .  .  .  .  .  Name: "DesiredState"
  1025  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1026  .  .  .  .  .  .  .  .  .  }
  1027  .  .  .  .  .  .  .  .  }
  1028  .  .  .  .  .  .  .  .  OpPos: 103:35
  1029  .  .  .  .  .  .  .  .  Op: <=
  1030  .  .  .  .  .  .  .  .  Y: *ast.SelectorExpr {
  1031  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1032  .  .  .  .  .  .  .  .  .  .  NamePos: 103:38
  1033  .  .  .  .  .  .  .  .  .  .  Name: "api"
  1034  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1035  .  .  .  .  .  .  .  .  .  }
  1036  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1037  .  .  .  .  .  .  .  .  .  .  NamePos: 103:42
  1038  .  .  .  .  .  .  .  .  .  .  Name: "TaskStateRunning"
  1039  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1040  .  .  .  .  .  .  .  .  .  }
  1041  .  .  .  .  .  .  .  .  }
  1042  .  .  .  .  .  .  .  }
  1043  .  .  .  .  .  .  .  OpPos: 103:59
  1044  .  .  .  .  .  .  .  Op: &&
  1045  .  .  .  .  .  .  .  Y: *ast.BinaryExpr {
  1046  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1047  .  .  .  .  .  .  .  .  .  NamePos: 104:3
  1048  .  .  .  .  .  .  .  .  .  Name: "currentState"
  1049  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 963)
  1050  .  .  .  .  .  .  .  .  }
  1051  .  .  .  .  .  .  .  .  OpPos: 104:16
  1052  .  .  .  .  .  .  .  .  Op: >=
  1053  .  .  .  .  .  .  .  .  Y: *ast.SelectorExpr {
  1054  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1055  .  .  .  .  .  .  .  .  .  .  NamePos: 104:19
  1056  .  .  .  .  .  .  .  .  .  .  Name: "api"
  1057  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1058  .  .  .  .  .  .  .  .  .  }
  1059  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1060  .  .  .  .  .  .  .  .  .  .  NamePos: 104:23
  1061  .  .  .  .  .  .  .  .  .  .  Name: "TaskStateReady"
  1062  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1063  .  .  .  .  .  .  .  .  .  }
  1064  .  .  .  .  .  .  .  .  }
  1065  .  .  .  .  .  .  .  }
  1066  .  .  .  .  .  .  }
  1067  .  .  .  .  .  .  OpPos: 104:38
  1068  .  .  .  .  .  .  Op: &&
  1069  .  .  .  .  .  .  Y: *ast.BinaryExpr {
  1070  .  .  .  .  .  .  .  X: *ast.Ident {
  1071  .  .  .  .  .  .  .  .  NamePos: 105:3
  1072  .  .  .  .  .  .  .  .  Name: "currentState"
  1073  .  .  .  .  .  .  .  .  Obj: *(obj @ 963)
  1074  .  .  .  .  .  .  .  }
  1075  .  .  .  .  .  .  .  OpPos: 105:16
  1076  .  .  .  .  .  .  .  Op: <=
  1077  .  .  .  .  .  .  .  Y: *ast.SelectorExpr {
  1078  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1079  .  .  .  .  .  .  .  .  .  NamePos: 105:19
  1080  .  .  .  .  .  .  .  .  .  Name: "api"
  1081  .  .  .  .  .  .  .  .  .  Obj: nil
  1082  .  .  .  .  .  .  .  .  }
  1083  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1084  .  .  .  .  .  .  .  .  .  NamePos: 105:23
  1085  .  .  .  .  .  .  .  .  .  Name: "TaskStateRunning"
  1086  .  .  .  .  .  .  .  .  .  Obj: nil
  1087  .  .  .  .  .  .  .  .  }
  1088  .  .  .  .  .  .  .  }
  1089  .  .  .  .  .  .  }
  1090  .  .  .  .  .  }
  1091  .  .  .  .  }
  1092  .  .  .  }
  1093  .  .  .  5: *ast.IfStmt {
  1094  .  .  .  .  If: 106:2
  1095  .  .  .  .  Init: nil
  1096  .  .  .  .  Cond: *ast.BinaryExpr {
  1097  .  .  .  .  .  X: *ast.BinaryExpr {
  1098  .  .  .  .  .  .  X: *ast.Ident {
  1099  .  .  .  .  .  .  .  NamePos: 106:5
  1100  .  .  .  .  .  .  .  Name: "ignorePullOpts"
  1101  .  .  .  .  .  .  .  Obj: *(obj @ 1001)
  1102  .  .  .  .  .  .  }
  1103  .  .  .  .  .  .  OpPos: 106:20
  1104  .  .  .  .  .  .  Op: &&
  1105  .  .  .  .  .  .  Y: *ast.BinaryExpr {
  1106  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1107  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1108  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1109  .  .  .  .  .  .  .  .  .  .  NamePos: 106:23
  1110  .  .  .  .  .  .  .  .  .  .  Name: "serviceTaskSpec"
  1111  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 295)
  1112  .  .  .  .  .  .  .  .  .  }
  1113  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1114  .  .  .  .  .  .  .  .  .  .  NamePos: 106:39
  1115  .  .  .  .  .  .  .  .  .  .  Name: "GetContainer"
  1116  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1117  .  .  .  .  .  .  .  .  .  }
  1118  .  .  .  .  .  .  .  .  }
  1119  .  .  .  .  .  .  .  .  Lparen: 106:51
  1120  .  .  .  .  .  .  .  .  Args: nil
  1121  .  .  .  .  .  .  .  .  Ellipsis: -
  1122  .  .  .  .  .  .  .  .  Rparen: 106:52
  1123  .  .  .  .  .  .  .  }
  1124  .  .  .  .  .  .  .  OpPos: 106:54
  1125  .  .  .  .  .  .  .  Op: !=
  1126  .  .  .  .  .  .  .  Y: *ast.Ident {
  1127  .  .  .  .  .  .  .  .  NamePos: 106:57
  1128  .  .  .  .  .  .  .  .  Name: "nil"
  1129  .  .  .  .  .  .  .  .  Obj: nil
  1130  .  .  .  .  .  .  .  }
  1131  .  .  .  .  .  .  }
  1132  .  .  .  .  .  }
  1133  .  .  .  .  .  OpPos: 106:61
  1134  .  .  .  .  .  Op: &&
  1135  .  .  .  .  .  Y: *ast.BinaryExpr {
  1136  .  .  .  .  .  .  X: *ast.CallExpr {
  1137  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1138  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1139  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1140  .  .  .  .  .  .  .  .  .  .  NamePos: 106:64
  1141  .  .  .  .  .  .  .  .  .  .  Name: "t"
  1142  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 101)
  1143  .  .  .  .  .  .  .  .  .  }
  1144  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1145  .  .  .  .  .  .  .  .  .  .  NamePos: 106:66
  1146  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
  1147  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1148  .  .  .  .  .  .  .  .  .  }
  1149  .  .  .  .  .  .  .  .  }
  1150  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1151  .  .  .  .  .  .  .  .  .  NamePos: 106:71
  1152  .  .  .  .  .  .  .  .  .  Name: "GetContainer"
  1153  .  .  .  .  .  .  .  .  .  Obj: nil
  1154  .  .  .  .  .  .  .  .  }
  1155  .  .  .  .  .  .  .  }
  1156  .  .  .  .  .  .  .  Lparen: 106:83
  1157  .  .  .  .  .  .  .  Args: nil
  1158  .  .  .  .  .  .  .  Ellipsis: -
  1159  .  .  .  .  .  .  .  Rparen: 106:84
  1160  .  .  .  .  .  .  }
  1161  .  .  .  .  .  .  OpPos: 106:86
  1162  .  .  .  .  .  .  Op: !=
  1163  .  .  .  .  .  .  Y: *ast.Ident {
  1164  .  .  .  .  .  .  .  NamePos: 106:89
  1165  .  .  .  .  .  .  .  Name: "nil"
  1166  .  .  .  .  .  .  .  Obj: nil
  1167  .  .  .  .  .  .  }
  1168  .  .  .  .  .  }
  1169  .  .  .  .  }
  1170  .  .  .  .  Body: *ast.BlockStmt {
  1171  .  .  .  .  .  Lbrace: 106:93
  1172  .  .  .  .  .  List: []ast.Stmt (len = 1) {
  1173  .  .  .  .  .  .  0: *ast.AssignStmt {
  1174  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 1) {
  1175  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  1176  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1177  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1178  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1179  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 108:3
  1180  .  .  .  .  .  .  .  .  .  .  .  .  Name: "serviceTaskSpec"
  1181  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 295)
  1182  .  .  .  .  .  .  .  .  .  .  .  }
  1183  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1184  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 108:19
  1185  .  .  .  .  .  .  .  .  .  .  .  .  Name: "GetContainer"
  1186  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1187  .  .  .  .  .  .  .  .  .  .  .  }
  1188  .  .  .  .  .  .  .  .  .  .  }
  1189  .  .  .  .  .  .  .  .  .  .  Lparen: 108:31
  1190  .  .  .  .  .  .  .  .  .  .  Args: nil
  1191  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1192  .  .  .  .  .  .  .  .  .  .  Rparen: 108:32
  1193  .  .  .  .  .  .  .  .  .  }
  1194  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1195  .  .  .  .  .  .  .  .  .  .  NamePos: 108:34
  1196  .  .  .  .  .  .  .  .  .  .  Name: "PullOptions"
  1197  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1198  .  .  .  .  .  .  .  .  .  }
  1199  .  .  .  .  .  .  .  .  }
  1200  .  .  .  .  .  .  .  }
  1201  .  .  .  .  .  .  .  TokPos: 108:46
  1202  .  .  .  .  .  .  .  Tok: =
  1203  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
  1204  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  1205  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1206  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1207  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1208  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1209  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 108:48
  1210  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
  1211  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 101)
  1212  .  .  .  .  .  .  .  .  .  .  .  .  }
  1213  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1214  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 108:50
  1215  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
  1216  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1217  .  .  .  .  .  .  .  .  .  .  .  .  }
  1218  .  .  .  .  .  .  .  .  .  .  .  }
  1219  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1220  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 108:55
  1221  .  .  .  .  .  .  .  .  .  .  .  .  Name: "GetContainer"
  1222  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1223  .  .  .  .  .  .  .  .  .  .  .  }
  1224  .  .  .  .  .  .  .  .  .  .  }
  1225  .  .  .  .  .  .  .  .  .  .  Lparen: 108:67
  1226  .  .  .  .  .  .  .  .  .  .  Args: nil
  1227  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1228  .  .  .  .  .  .  .  .  .  .  Rparen: 108:68
  1229  .  .  .  .  .  .  .  .  .  }
  1230  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1231  .  .  .  .  .  .  .  .  .  .  NamePos: 108:70
  1232  .  .  .  .  .  .  .  .  .  .  Name: "PullOptions"
  1233  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1234  .  .  .  .  .  .  .  .  .  }
  1235  .  .  .  .  .  .  .  .  }
  1236  .  .  .  .  .  .  .  }
  1237  .  .  .  .  .  .  }
  1238  .  .  .  .  .  }
  1239  .  .  .  .  .  Rbrace: 109:2
  1240  .  .  .  .  }
  1241  .  .  .  .  Else: nil
  1242  .  .  .  }
  1243  .  .  .  6: *ast.ReturnStmt {
  1244  .  .  .  .  Return: 111:2
  1245  .  .  .  .  Results: []ast.Expr (len = 1) {
  1246  .  .  .  .  .  0: *ast.BinaryExpr {
  1247  .  .  .  .  .  .  X: *ast.UnaryExpr {
  1248  .  .  .  .  .  .  .  OpPos: 111:9
  1249  .  .  .  .  .  .  .  Op: !
  1250  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1251  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1252  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1253  .  .  .  .  .  .  .  .  .  .  NamePos: 111:10
  1254  .  .  .  .  .  .  .  .  .  .  Name: "reflect"
  1255  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1256  .  .  .  .  .  .  .  .  .  }
  1257  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1258  .  .  .  .  .  .  .  .  .  .  NamePos: 111:18
  1259  .  .  .  .  .  .  .  .  .  .  Name: "DeepEqual"
  1260  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1261  .  .  .  .  .  .  .  .  .  }
  1262  .  .  .  .  .  .  .  .  }
  1263  .  .  .  .  .  .  .  .  Lparen: 111:27
  1264  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1265  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
  1266  .  .  .  .  .  .  .  .  .  .  NamePos: 111:28
  1267  .  .  .  .  .  .  .  .  .  .  Name: "serviceTaskSpec"
  1268  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 295)
  1269  .  .  .  .  .  .  .  .  .  }
  1270  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  1271  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1272  .  .  .  .  .  .  .  .  .  .  .  NamePos: 111:45
  1273  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
  1274  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 101)
  1275  .  .  .  .  .  .  .  .  .  .  }
  1276  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1277  .  .  .  .  .  .  .  .  .  .  .  NamePos: 111:47
  1278  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
  1279  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1280  .  .  .  .  .  .  .  .  .  .  }
  1281  .  .  .  .  .  .  .  .  .  }
  1282  .  .  .  .  .  .  .  .  }
  1283  .  .  .  .  .  .  .  .  Ellipsis: -
  1284  .  .  .  .  .  .  .  .  Rparen: 111:51
  1285  .  .  .  .  .  .  .  }
  1286  .  .  .  .  .  .  }
  1287  .  .  .  .  .  .  OpPos: 111:53
  1288  .  .  .  .  .  .  Op: ||
  1289  .  .  .  .  .  .  Y: *ast.ParenExpr {
  1290  .  .  .  .  .  .  .  Lparen: 112:3
  1291  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
  1292  .  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
  1293  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1294  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1295  .  .  .  .  .  .  .  .  .  .  .  NamePos: 112:4
  1296  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
  1297  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 101)
  1298  .  .  .  .  .  .  .  .  .  .  }
  1299  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1300  .  .  .  .  .  .  .  .  .  .  .  NamePos: 112:6
  1301  .  .  .  .  .  .  .  .  .  .  .  Name: "Endpoint"
  1302  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1303  .  .  .  .  .  .  .  .  .  .  }
  1304  .  .  .  .  .  .  .  .  .  }
  1305  .  .  .  .  .  .  .  .  .  OpPos: 112:15
  1306  .  .  .  .  .  .  .  .  .  Op: !=
  1307  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
  1308  .  .  .  .  .  .  .  .  .  .  NamePos: 112:18
  1309  .  .  .  .  .  .  .  .  .  .  Name: "nil"
  1310  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1311  .  .  .  .  .  .  .  .  .  }
  1312  .  .  .  .  .  .  .  .  }
  1313  .  .  .  .  .  .  .  .  OpPos: 112:22
  1314  .  .  .  .  .  .  .  .  Op: &&
  1315  .  .  .  .  .  .  .  .  Y: *ast.UnaryExpr {
  1316  .  .  .  .  .  .  .  .  .  OpPos: 112:25
  1317  .  .  .  .  .  .  .  .  .  Op: !
  1318  .  .  .  .  .  .  .  .  .  X: *ast.CallExpr {
  1319  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
  1320  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1321  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 112:26
  1322  .  .  .  .  .  .  .  .  .  .  .  .  Name: "reflect"
  1323  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1324  .  .  .  .  .  .  .  .  .  .  .  }
  1325  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1326  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 112:34
  1327  .  .  .  .  .  .  .  .  .  .  .  .  Name: "DeepEqual"
  1328  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1329  .  .  .  .  .  .  .  .  .  .  .  }
  1330  .  .  .  .  .  .  .  .  .  .  }
  1331  .  .  .  .  .  .  .  .  .  .  Lparen: 112:43
  1332  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
  1333  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
  1334  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1335  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1336  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 112:44
  1337  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "s"
  1338  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 68)
  1339  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1340  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1341  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 112:46
  1342  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
  1343  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1344  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1345  .  .  .  .  .  .  .  .  .  .  .  .  }
  1346  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1347  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 112:51
  1348  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Endpoint"
  1349  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1350  .  .  .  .  .  .  .  .  .  .  .  .  }
  1351  .  .  .  .  .  .  .  .  .  .  .  }
  1352  .  .  .  .  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
  1353  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
  1354  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
  1355  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 112:61
  1356  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
  1357  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 101)
  1358  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1359  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1360  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 112:63
  1361  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Endpoint"
  1362  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1363  .  .  .  .  .  .  .  .  .  .  .  .  .  }
  1364  .  .  .  .  .  .  .  .  .  .  .  .  }
  1365  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
  1366  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 112:72
  1367  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
  1368  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
  1369  .  .  .  .  .  .  .  .  .  .  .  .  }
  1370  .  .  .  .  .  .  .  .  .  .  .  }
  1371  .  .  .  .  .  .  .  .  .  .  }
  1372  .  .  .  .  .  .  .  .  .  .  Ellipsis: -
  1373  .  .  .  .  .  .  .  .  .  .  Rparen: 112:76
  1374  .  .  .  .  .  .  .  .  .  }
  1375  .  .  .  .  .  .  .  .  }
  1376  .  .  .  .  .  .  .  }
  1377  .  .  .  .  .  .  .  Rparen: 112:77
  1378  .  .  .  .  .  .  }
  1379  .  .  .  .  .  }
  1380  .  .  .  .  }
  1381  .  .  .  }
  1382  .  .  }
  1383  .  .  Rbrace: 113:1
  1384  .  }
  1385  }
     0  *ast.FuncDecl {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 2) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: 115:1
     5  .  .  .  .  Text: "// Checks if the current assigned node matches the Placement.Constraints"
     6  .  .  .  }
     7  .  .  .  1: *ast.Comment {
     8  .  .  .  .  Slash: 116:1
     9  .  .  .  .  Text: "// specified in the task spec for Updater.newService."
    10  .  .  .  }
    11  .  .  }
    12  .  }
    13  .  Recv: nil
    14  .  Name: *ast.Ident {
    15  .  .  NamePos: 117:6
    16  .  .  Name: "nodeMatches"
    17  .  .  Obj: *ast.Object {
    18  .  .  .  Kind: func
    19  .  .  .  Name: "nodeMatches"
    20  .  .  .  Decl: *(obj @ 0)
    21  .  .  .  Data: nil
    22  .  .  .  Type: nil
    23  .  .  }
    24  .  }
    25  .  Type: *ast.FuncType {
    26  .  .  Func: 117:1
    27  .  .  Params: *ast.FieldList {
    28  .  .  .  Opening: 117:17
    29  .  .  .  List: []*ast.Field (len = 2) {
    30  .  .  .  .  0: *ast.Field {
    31  .  .  .  .  .  Doc: nil
    32  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    33  .  .  .  .  .  .  0: *ast.Ident {
    34  .  .  .  .  .  .  .  NamePos: 117:18
    35  .  .  .  .  .  .  .  Name: "s"
    36  .  .  .  .  .  .  .  Obj: *ast.Object {
    37  .  .  .  .  .  .  .  .  Kind: var
    38  .  .  .  .  .  .  .  .  Name: "s"
    39  .  .  .  .  .  .  .  .  Decl: *(obj @ 30)
    40  .  .  .  .  .  .  .  .  Data: nil
    41  .  .  .  .  .  .  .  .  Type: nil
    42  .  .  .  .  .  .  .  }
    43  .  .  .  .  .  .  }
    44  .  .  .  .  .  }
    45  .  .  .  .  .  Type: *ast.StarExpr {
    46  .  .  .  .  .  .  Star: 117:20
    47  .  .  .  .  .  .  X: *ast.SelectorExpr {
    48  .  .  .  .  .  .  .  X: *ast.Ident {
    49  .  .  .  .  .  .  .  .  NamePos: 117:21
    50  .  .  .  .  .  .  .  .  Name: "api"
    51  .  .  .  .  .  .  .  .  Obj: nil
    52  .  .  .  .  .  .  .  }
    53  .  .  .  .  .  .  .  Sel: *ast.Ident {
    54  .  .  .  .  .  .  .  .  NamePos: 117:25
    55  .  .  .  .  .  .  .  .  Name: "Service"
    56  .  .  .  .  .  .  .  .  Obj: nil
    57  .  .  .  .  .  .  .  }
    58  .  .  .  .  .  .  }
    59  .  .  .  .  .  }
    60  .  .  .  .  .  Tag: nil
    61  .  .  .  .  .  Comment: nil
    62  .  .  .  .  }
    63  .  .  .  .  1: *ast.Field {
    64  .  .  .  .  .  Doc: nil
    65  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    66  .  .  .  .  .  .  0: *ast.Ident {
    67  .  .  .  .  .  .  .  NamePos: 117:34
    68  .  .  .  .  .  .  .  Name: "n"
    69  .  .  .  .  .  .  .  Obj: *ast.Object {
    70  .  .  .  .  .  .  .  .  Kind: var
    71  .  .  .  .  .  .  .  .  Name: "n"
    72  .  .  .  .  .  .  .  .  Decl: *(obj @ 63)
    73  .  .  .  .  .  .  .  .  Data: nil
    74  .  .  .  .  .  .  .  .  Type: nil
    75  .  .  .  .  .  .  .  }
    76  .  .  .  .  .  .  }
    77  .  .  .  .  .  }
    78  .  .  .  .  .  Type: *ast.StarExpr {
    79  .  .  .  .  .  .  Star: 117:36
    80  .  .  .  .  .  .  X: *ast.SelectorExpr {
    81  .  .  .  .  .  .  .  X: *ast.Ident {
    82  .  .  .  .  .  .  .  .  NamePos: 117:37
    83  .  .  .  .  .  .  .  .  Name: "api"
    84  .  .  .  .  .  .  .  .  Obj: nil
    85  .  .  .  .  .  .  .  }
    86  .  .  .  .  .  .  .  Sel: *ast.Ident {
    87  .  .  .  .  .  .  .  .  NamePos: 117:41
    88  .  .  .  .  .  .  .  .  Name: "Node"
    89  .  .  .  .  .  .  .  .  Obj: nil
    90  .  .  .  .  .  .  .  }
    91  .  .  .  .  .  .  }
    92  .  .  .  .  .  }
    93  .  .  .  .  .  Tag: nil
    94  .  .  .  .  .  Comment: nil
    95  .  .  .  .  }
    96  .  .  .  }
    97  .  .  .  Closing: 117:45
    98  .  .  }
    99  .  .  Results: *ast.FieldList {
   100  .  .  .  Opening: -
   101  .  .  .  List: []*ast.Field (len = 1) {
   102  .  .  .  .  0: *ast.Field {
   103  .  .  .  .  .  Doc: nil
   104  .  .  .  .  .  Names: nil
   105  .  .  .  .  .  Type: *ast.Ident {
   106  .  .  .  .  .  .  NamePos: 117:47
   107  .  .  .  .  .  .  Name: "bool"
   108  .  .  .  .  .  .  Obj: nil
   109  .  .  .  .  .  }
   110  .  .  .  .  .  Tag: nil
   111  .  .  .  .  .  Comment: nil
   112  .  .  .  .  }
   113  .  .  .  }
   114  .  .  .  Closing: -
   115  .  .  }
   116  .  }
   117  .  Body: *ast.BlockStmt {
   118  .  .  Lbrace: 117:52
   119  .  .  List: []ast.Stmt (len = 3) {
   120  .  .  .  0: *ast.IfStmt {
   121  .  .  .  .  If: 118:2
   122  .  .  .  .  Init: nil
   123  .  .  .  .  Cond: *ast.BinaryExpr {
   124  .  .  .  .  .  X: *ast.Ident {
   125  .  .  .  .  .  .  NamePos: 118:5
   126  .  .  .  .  .  .  Name: "n"
   127  .  .  .  .  .  .  Obj: *(obj @ 69)
   128  .  .  .  .  .  }
   129  .  .  .  .  .  OpPos: 118:7
   130  .  .  .  .  .  Op: ==
   131  .  .  .  .  .  Y: *ast.Ident {
   132  .  .  .  .  .  .  NamePos: 118:10
   133  .  .  .  .  .  .  Name: "nil"
   134  .  .  .  .  .  .  Obj: nil
   135  .  .  .  .  .  }
   136  .  .  .  .  }
   137  .  .  .  .  Body: *ast.BlockStmt {
   138  .  .  .  .  .  Lbrace: 118:14
   139  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   140  .  .  .  .  .  .  0: *ast.ReturnStmt {
   141  .  .  .  .  .  .  .  Return: 119:3
   142  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   143  .  .  .  .  .  .  .  .  0: *ast.Ident {
   144  .  .  .  .  .  .  .  .  .  NamePos: 119:10
   145  .  .  .  .  .  .  .  .  .  Name: "false"
   146  .  .  .  .  .  .  .  .  .  Obj: nil
   147  .  .  .  .  .  .  .  .  }
   148  .  .  .  .  .  .  .  }
   149  .  .  .  .  .  .  }
   150  .  .  .  .  .  }
   151  .  .  .  .  .  Rbrace: 120:2
   152  .  .  .  .  }
   153  .  .  .  .  Else: nil
   154  .  .  .  }
   155  .  .  .  1: *ast.AssignStmt {
   156  .  .  .  .  Lhs: []ast.Expr (len = 2) {
   157  .  .  .  .  .  0: *ast.Ident {
   158  .  .  .  .  .  .  NamePos: 122:2
   159  .  .  .  .  .  .  Name: "constraints"
   160  .  .  .  .  .  .  Obj: *ast.Object {
   161  .  .  .  .  .  .  .  Kind: var
   162  .  .  .  .  .  .  .  Name: "constraints"
   163  .  .  .  .  .  .  .  Decl: *(obj @ 155)
   164  .  .  .  .  .  .  .  Data: nil
   165  .  .  .  .  .  .  .  Type: nil
   166  .  .  .  .  .  .  }
   167  .  .  .  .  .  }
   168  .  .  .  .  .  1: *ast.Ident {
   169  .  .  .  .  .  .  NamePos: 122:15
   170  .  .  .  .  .  .  Name: "_"
   171  .  .  .  .  .  .  Obj: *ast.Object {
   172  .  .  .  .  .  .  .  Kind: var
   173  .  .  .  .  .  .  .  Name: "_"
   174  .  .  .  .  .  .  .  Decl: *(obj @ 155)
   175  .  .  .  .  .  .  .  Data: nil
   176  .  .  .  .  .  .  .  Type: nil
   177  .  .  .  .  .  .  }
   178  .  .  .  .  .  }
   179  .  .  .  .  }
   180  .  .  .  .  TokPos: 122:17
   181  .  .  .  .  Tok: :=
   182  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   183  .  .  .  .  .  0: *ast.CallExpr {
   184  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   185  .  .  .  .  .  .  .  X: *ast.Ident {
   186  .  .  .  .  .  .  .  .  NamePos: 122:20
   187  .  .  .  .  .  .  .  .  Name: "constraint"
   188  .  .  .  .  .  .  .  .  Obj: nil
   189  .  .  .  .  .  .  .  }
   190  .  .  .  .  .  .  .  Sel: *ast.Ident {
   191  .  .  .  .  .  .  .  .  NamePos: 122:31
   192  .  .  .  .  .  .  .  .  Name: "Parse"
   193  .  .  .  .  .  .  .  .  Obj: nil
   194  .  .  .  .  .  .  .  }
   195  .  .  .  .  .  .  }
   196  .  .  .  .  .  .  Lparen: 122:36
   197  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   198  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   199  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   200  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   201  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   202  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   203  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 122:37
   204  .  .  .  .  .  .  .  .  .  .  .  .  Name: "s"
   205  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 36)
   206  .  .  .  .  .  .  .  .  .  .  .  }
   207  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   208  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 122:39
   209  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
   210  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   211  .  .  .  .  .  .  .  .  .  .  .  }
   212  .  .  .  .  .  .  .  .  .  .  }
   213  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   214  .  .  .  .  .  .  .  .  .  .  .  NamePos: 122:44
   215  .  .  .  .  .  .  .  .  .  .  .  Name: "Task"
   216  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   217  .  .  .  .  .  .  .  .  .  .  }
   218  .  .  .  .  .  .  .  .  .  }
   219  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   220  .  .  .  .  .  .  .  .  .  .  NamePos: 122:49
   221  .  .  .  .  .  .  .  .  .  .  Name: "Placement"
   222  .  .  .  .  .  .  .  .  .  .  Obj: nil
   223  .  .  .  .  .  .  .  .  .  }
   224  .  .  .  .  .  .  .  .  }
   225  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   226  .  .  .  .  .  .  .  .  .  NamePos: 122:59
   227  .  .  .  .  .  .  .  .  .  Name: "Constraints"
   228  .  .  .  .  .  .  .  .  .  Obj: nil
   229  .  .  .  .  .  .  .  .  }
   230  .  .  .  .  .  .  .  }
   231  .  .  .  .  .  .  }
   232  .  .  .  .  .  .  Ellipsis: -
   233  .  .  .  .  .  .  Rparen: 122:70
   234  .  .  .  .  .  }
   235  .  .  .  .  }
   236  .  .  .  }
   237  .  .  .  2: *ast.ReturnStmt {
   238  .  .  .  .  Return: 123:2
   239  .  .  .  .  Results: []ast.Expr (len = 1) {
   240  .  .  .  .  .  0: *ast.CallExpr {
   241  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   242  .  .  .  .  .  .  .  X: *ast.Ident {
   243  .  .  .  .  .  .  .  .  NamePos: 123:9
   244  .  .  .  .  .  .  .  .  Name: "constraint"
   245  .  .  .  .  .  .  .  .  Obj: nil
   246  .  .  .  .  .  .  .  }
   247  .  .  .  .  .  .  .  Sel: *ast.Ident {
   248  .  .  .  .  .  .  .  .  NamePos: 123:20
   249  .  .  .  .  .  .  .  .  Name: "NodeMatches"
   250  .  .  .  .  .  .  .  .  Obj: nil
   251  .  .  .  .  .  .  .  }
   252  .  .  .  .  .  .  }
   253  .  .  .  .  .  .  Lparen: 123:31
   254  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   255  .  .  .  .  .  .  .  0: *ast.Ident {
   256  .  .  .  .  .  .  .  .  NamePos: 123:32
   257  .  .  .  .  .  .  .  .  Name: "constraints"
   258  .  .  .  .  .  .  .  .  Obj: *(obj @ 160)
   259  .  .  .  .  .  .  .  }
   260  .  .  .  .  .  .  .  1: *ast.Ident {
   261  .  .  .  .  .  .  .  .  NamePos: 123:45
   262  .  .  .  .  .  .  .  .  Name: "n"
   263  .  .  .  .  .  .  .  .  Obj: *(obj @ 69)
   264  .  .  .  .  .  .  .  }
   265  .  .  .  .  .  .  }
   266  .  .  .  .  .  .  Ellipsis: -
   267  .  .  .  .  .  .  Rparen: 123:46
   268  .  .  .  .  .  }
   269  .  .  .  .  }
   270  .  .  .  }
   271  .  .  }
   272  .  .  Rbrace: 124:1
   273  .  }
   274  }
     0  *ast.FuncDecl {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 2) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: 126:1
     5  .  .  .  .  Text: "// IsTaskDirtyPlacementConstraintsOnly checks if the Placement field alone"
     6  .  .  .  }
     7  .  .  .  1: *ast.Comment {
     8  .  .  .  .  Slash: 127:1
     9  .  .  .  .  Text: "// in the spec has changed."
    10  .  .  .  }
    11  .  .  }
    12  .  }
    13  .  Recv: nil
    14  .  Name: *ast.Ident {
    15  .  .  NamePos: 128:6
    16  .  .  Name: "IsTaskDirtyPlacementConstraintsOnly"
    17  .  .  Obj: *ast.Object {
    18  .  .  .  Kind: func
    19  .  .  .  Name: "IsTaskDirtyPlacementConstraintsOnly"
    20  .  .  .  Decl: *(obj @ 0)
    21  .  .  .  Data: nil
    22  .  .  .  Type: nil
    23  .  .  }
    24  .  }
    25  .  Type: *ast.FuncType {
    26  .  .  Func: 128:1
    27  .  .  Params: *ast.FieldList {
    28  .  .  .  Opening: 128:41
    29  .  .  .  List: []*ast.Field (len = 2) {
    30  .  .  .  .  0: *ast.Field {
    31  .  .  .  .  .  Doc: nil
    32  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    33  .  .  .  .  .  .  0: *ast.Ident {
    34  .  .  .  .  .  .  .  NamePos: 128:42
    35  .  .  .  .  .  .  .  Name: "serviceTaskSpec"
    36  .  .  .  .  .  .  .  Obj: *ast.Object {
    37  .  .  .  .  .  .  .  .  Kind: var
    38  .  .  .  .  .  .  .  .  Name: "serviceTaskSpec"
    39  .  .  .  .  .  .  .  .  Decl: *(obj @ 30)
    40  .  .  .  .  .  .  .  .  Data: nil
    41  .  .  .  .  .  .  .  .  Type: nil
    42  .  .  .  .  .  .  .  }
    43  .  .  .  .  .  .  }
    44  .  .  .  .  .  }
    45  .  .  .  .  .  Type: *ast.SelectorExpr {
    46  .  .  .  .  .  .  X: *ast.Ident {
    47  .  .  .  .  .  .  .  NamePos: 128:58
    48  .  .  .  .  .  .  .  Name: "api"
    49  .  .  .  .  .  .  .  Obj: nil
    50  .  .  .  .  .  .  }
    51  .  .  .  .  .  .  Sel: *ast.Ident {
    52  .  .  .  .  .  .  .  NamePos: 128:62
    53  .  .  .  .  .  .  .  Name: "TaskSpec"
    54  .  .  .  .  .  .  .  Obj: nil
    55  .  .  .  .  .  .  }
    56  .  .  .  .  .  }
    57  .  .  .  .  .  Tag: nil
    58  .  .  .  .  .  Comment: nil
    59  .  .  .  .  }
    60  .  .  .  .  1: *ast.Field {
    61  .  .  .  .  .  Doc: nil
    62  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    63  .  .  .  .  .  .  0: *ast.Ident {
    64  .  .  .  .  .  .  .  NamePos: 128:72
    65  .  .  .  .  .  .  .  Name: "t"
    66  .  .  .  .  .  .  .  Obj: *ast.Object {
    67  .  .  .  .  .  .  .  .  Kind: var
    68  .  .  .  .  .  .  .  .  Name: "t"
    69  .  .  .  .  .  .  .  .  Decl: *(obj @ 60)
    70  .  .  .  .  .  .  .  .  Data: nil
    71  .  .  .  .  .  .  .  .  Type: nil
    72  .  .  .  .  .  .  .  }
    73  .  .  .  .  .  .  }
    74  .  .  .  .  .  }
    75  .  .  .  .  .  Type: *ast.StarExpr {
    76  .  .  .  .  .  .  Star: 128:74
    77  .  .  .  .  .  .  X: *ast.SelectorExpr {
    78  .  .  .  .  .  .  .  X: *ast.Ident {
    79  .  .  .  .  .  .  .  .  NamePos: 128:75
    80  .  .  .  .  .  .  .  .  Name: "api"
    81  .  .  .  .  .  .  .  .  Obj: nil
    82  .  .  .  .  .  .  .  }
    83  .  .  .  .  .  .  .  Sel: *ast.Ident {
    84  .  .  .  .  .  .  .  .  NamePos: 128:79
    85  .  .  .  .  .  .  .  .  Name: "Task"
    86  .  .  .  .  .  .  .  .  Obj: nil
    87  .  .  .  .  .  .  .  }
    88  .  .  .  .  .  .  }
    89  .  .  .  .  .  }
    90  .  .  .  .  .  Tag: nil
    91  .  .  .  .  .  Comment: nil
    92  .  .  .  .  }
    93  .  .  .  }
    94  .  .  .  Closing: 128:83
    95  .  .  }
    96  .  .  Results: *ast.FieldList {
    97  .  .  .  Opening: -
    98  .  .  .  List: []*ast.Field (len = 1) {
    99  .  .  .  .  0: *ast.Field {
   100  .  .  .  .  .  Doc: nil
   101  .  .  .  .  .  Names: nil
   102  .  .  .  .  .  Type: *ast.Ident {
   103  .  .  .  .  .  .  NamePos: 128:85
   104  .  .  .  .  .  .  Name: "bool"
   105  .  .  .  .  .  .  Obj: nil
   106  .  .  .  .  .  }
   107  .  .  .  .  .  Tag: nil
   108  .  .  .  .  .  Comment: nil
   109  .  .  .  .  }
   110  .  .  .  }
   111  .  .  .  Closing: -
   112  .  .  }
   113  .  }
   114  .  Body: *ast.BlockStmt {
   115  .  .  Lbrace: 128:90
   116  .  .  List: []ast.Stmt (len = 3) {
   117  .  .  .  0: *ast.IfStmt {
   118  .  .  .  .  If: 130:2
   119  .  .  .  .  Init: nil
   120  .  .  .  .  Cond: *ast.CallExpr {
   121  .  .  .  .  .  Fun: *ast.SelectorExpr {
   122  .  .  .  .  .  .  X: *ast.Ident {
   123  .  .  .  .  .  .  .  NamePos: 130:5
   124  .  .  .  .  .  .  .  Name: "reflect"
   125  .  .  .  .  .  .  .  Obj: nil
   126  .  .  .  .  .  .  }
   127  .  .  .  .  .  .  Sel: *ast.Ident {
   128  .  .  .  .  .  .  .  NamePos: 130:13
   129  .  .  .  .  .  .  .  Name: "DeepEqual"
   130  .  .  .  .  .  .  .  Obj: nil
   131  .  .  .  .  .  .  }
   132  .  .  .  .  .  }
   133  .  .  .  .  .  Lparen: 130:22
   134  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   135  .  .  .  .  .  .  0: *ast.SelectorExpr {
   136  .  .  .  .  .  .  .  X: *ast.Ident {
   137  .  .  .  .  .  .  .  .  NamePos: 130:23
   138  .  .  .  .  .  .  .  .  Name: "serviceTaskSpec"
   139  .  .  .  .  .  .  .  .  Obj: *(obj @ 36)
   140  .  .  .  .  .  .  .  }
   141  .  .  .  .  .  .  .  Sel: *ast.Ident {
   142  .  .  .  .  .  .  .  .  NamePos: 130:39
   143  .  .  .  .  .  .  .  .  Name: "Placement"
   144  .  .  .  .  .  .  .  .  Obj: nil
   145  .  .  .  .  .  .  .  }
   146  .  .  .  .  .  .  }
   147  .  .  .  .  .  .  1: *ast.SelectorExpr {
   148  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   149  .  .  .  .  .  .  .  .  X: *ast.Ident {
   150  .  .  .  .  .  .  .  .  .  NamePos: 130:50
   151  .  .  .  .  .  .  .  .  .  Name: "t"
   152  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 66)
   153  .  .  .  .  .  .  .  .  }
   154  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   155  .  .  .  .  .  .  .  .  .  NamePos: 130:52
   156  .  .  .  .  .  .  .  .  .  Name: "Spec"
   157  .  .  .  .  .  .  .  .  .  Obj: nil
   158  .  .  .  .  .  .  .  .  }
   159  .  .  .  .  .  .  .  }
   160  .  .  .  .  .  .  .  Sel: *ast.Ident {
   161  .  .  .  .  .  .  .  .  NamePos: 130:57
   162  .  .  .  .  .  .  .  .  Name: "Placement"
   163  .  .  .  .  .  .  .  .  Obj: nil
   164  .  .  .  .  .  .  .  }
   165  .  .  .  .  .  .  }
   166  .  .  .  .  .  }
   167  .  .  .  .  .  Ellipsis: -
   168  .  .  .  .  .  Rparen: 130:66
   169  .  .  .  .  }
   170  .  .  .  .  Body: *ast.BlockStmt {
   171  .  .  .  .  .  Lbrace: 130:68
   172  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   173  .  .  .  .  .  .  0: *ast.ReturnStmt {
   174  .  .  .  .  .  .  .  Return: 131:3
   175  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   176  .  .  .  .  .  .  .  .  0: *ast.Ident {
   177  .  .  .  .  .  .  .  .  .  NamePos: 131:10
   178  .  .  .  .  .  .  .  .  .  Name: "false"
   179  .  .  .  .  .  .  .  .  .  Obj: nil
   180  .  .  .  .  .  .  .  .  }
   181  .  .  .  .  .  .  .  }
   182  .  .  .  .  .  .  }
   183  .  .  .  .  .  }
   184  .  .  .  .  .  Rbrace: 132:2
   185  .  .  .  .  }
   186  .  .  .  .  Else: nil
   187  .  .  .  }
   188  .  .  .  1: *ast.AssignStmt {
   189  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   190  .  .  .  .  .  0: *ast.SelectorExpr {
   191  .  .  .  .  .  .  X: *ast.Ident {
   192  .  .  .  .  .  .  .  NamePos: 136:2
   193  .  .  .  .  .  .  .  Name: "serviceTaskSpec"
   194  .  .  .  .  .  .  .  Obj: *(obj @ 36)
   195  .  .  .  .  .  .  }
   196  .  .  .  .  .  .  Sel: *ast.Ident {
   197  .  .  .  .  .  .  .  NamePos: 136:18
   198  .  .  .  .  .  .  .  Name: "Placement"
   199  .  .  .  .  .  .  .  Obj: nil
   200  .  .  .  .  .  .  }
   201  .  .  .  .  .  }
   202  .  .  .  .  }
   203  .  .  .  .  TokPos: 136:28
   204  .  .  .  .  Tok: =
   205  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   206  .  .  .  .  .  0: *ast.SelectorExpr {
   207  .  .  .  .  .  .  X: *ast.SelectorExpr {
   208  .  .  .  .  .  .  .  X: *ast.Ident {
   209  .  .  .  .  .  .  .  .  NamePos: 136:30
   210  .  .  .  .  .  .  .  .  Name: "t"
   211  .  .  .  .  .  .  .  .  Obj: *(obj @ 66)
   212  .  .  .  .  .  .  .  }
   213  .  .  .  .  .  .  .  Sel: *ast.Ident {
   214  .  .  .  .  .  .  .  .  NamePos: 136:32
   215  .  .  .  .  .  .  .  .  Name: "Spec"
   216  .  .  .  .  .  .  .  .  Obj: nil
   217  .  .  .  .  .  .  .  }
   218  .  .  .  .  .  .  }
   219  .  .  .  .  .  .  Sel: *ast.Ident {
   220  .  .  .  .  .  .  .  NamePos: 136:37
   221  .  .  .  .  .  .  .  Name: "Placement"
   222  .  .  .  .  .  .  .  Obj: nil
   223  .  .  .  .  .  .  }
   224  .  .  .  .  .  }
   225  .  .  .  .  }
   226  .  .  .  }
   227  .  .  .  2: *ast.ReturnStmt {
   228  .  .  .  .  Return: 137:2
   229  .  .  .  .  Results: []ast.Expr (len = 1) {
   230  .  .  .  .  .  0: *ast.CallExpr {
   231  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
   232  .  .  .  .  .  .  .  X: *ast.Ident {
   233  .  .  .  .  .  .  .  .  NamePos: 137:9
   234  .  .  .  .  .  .  .  .  Name: "reflect"
   235  .  .  .  .  .  .  .  .  Obj: nil
   236  .  .  .  .  .  .  .  }
   237  .  .  .  .  .  .  .  Sel: *ast.Ident {
   238  .  .  .  .  .  .  .  .  NamePos: 137:17
   239  .  .  .  .  .  .  .  .  Name: "DeepEqual"
   240  .  .  .  .  .  .  .  .  Obj: nil
   241  .  .  .  .  .  .  .  }
   242  .  .  .  .  .  .  }
   243  .  .  .  .  .  .  Lparen: 137:26
   244  .  .  .  .  .  .  Args: []ast.Expr (len = 2) {
   245  .  .  .  .  .  .  .  0: *ast.Ident {
   246  .  .  .  .  .  .  .  .  NamePos: 137:27
   247  .  .  .  .  .  .  .  .  Name: "serviceTaskSpec"
   248  .  .  .  .  .  .  .  .  Obj: *(obj @ 36)
   249  .  .  .  .  .  .  .  }
   250  .  .  .  .  .  .  .  1: *ast.SelectorExpr {
   251  .  .  .  .  .  .  .  .  X: *ast.Ident {
   252  .  .  .  .  .  .  .  .  .  NamePos: 137:44
   253  .  .  .  .  .  .  .  .  .  Name: "t"
   254  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 66)
   255  .  .  .  .  .  .  .  .  }
   256  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   257  .  .  .  .  .  .  .  .  .  NamePos: 137:46
   258  .  .  .  .  .  .  .  .  .  Name: "Spec"
   259  .  .  .  .  .  .  .  .  .  Obj: nil
   260  .  .  .  .  .  .  .  .  }
   261  .  .  .  .  .  .  .  }
   262  .  .  .  .  .  .  }
   263  .  .  .  .  .  .  Ellipsis: -
   264  .  .  .  .  .  .  Rparen: 137:50
   265  .  .  .  .  .  }
   266  .  .  .  .  }
   267  .  .  .  }
   268  .  .  }
   269  .  .  Rbrace: 138:1
   270  .  }
   271  }
     0  *ast.FuncDecl {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: 140:1
     5  .  .  .  .  Text: "// InvalidNode is true if the node is nil, down, or drained"
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  Recv: nil
    10  .  Name: *ast.Ident {
    11  .  .  NamePos: 141:6
    12  .  .  Name: "InvalidNode"
    13  .  .  Obj: *ast.Object {
    14  .  .  .  Kind: func
    15  .  .  .  Name: "InvalidNode"
    16  .  .  .  Decl: *(obj @ 0)
    17  .  .  .  Data: nil
    18  .  .  .  Type: nil
    19  .  .  }
    20  .  }
    21  .  Type: *ast.FuncType {
    22  .  .  Func: 141:1
    23  .  .  Params: *ast.FieldList {
    24  .  .  .  Opening: 141:17
    25  .  .  .  List: []*ast.Field (len = 1) {
    26  .  .  .  .  0: *ast.Field {
    27  .  .  .  .  .  Doc: nil
    28  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    29  .  .  .  .  .  .  0: *ast.Ident {
    30  .  .  .  .  .  .  .  NamePos: 141:18
    31  .  .  .  .  .  .  .  Name: "n"
    32  .  .  .  .  .  .  .  Obj: *ast.Object {
    33  .  .  .  .  .  .  .  .  Kind: var
    34  .  .  .  .  .  .  .  .  Name: "n"
    35  .  .  .  .  .  .  .  .  Decl: *(obj @ 26)
    36  .  .  .  .  .  .  .  .  Data: nil
    37  .  .  .  .  .  .  .  .  Type: nil
    38  .  .  .  .  .  .  .  }
    39  .  .  .  .  .  .  }
    40  .  .  .  .  .  }
    41  .  .  .  .  .  Type: *ast.StarExpr {
    42  .  .  .  .  .  .  Star: 141:20
    43  .  .  .  .  .  .  X: *ast.SelectorExpr {
    44  .  .  .  .  .  .  .  X: *ast.Ident {
    45  .  .  .  .  .  .  .  .  NamePos: 141:21
    46  .  .  .  .  .  .  .  .  Name: "api"
    47  .  .  .  .  .  .  .  .  Obj: nil
    48  .  .  .  .  .  .  .  }
    49  .  .  .  .  .  .  .  Sel: *ast.Ident {
    50  .  .  .  .  .  .  .  .  NamePos: 141:25
    51  .  .  .  .  .  .  .  .  Name: "Node"
    52  .  .  .  .  .  .  .  .  Obj: nil
    53  .  .  .  .  .  .  .  }
    54  .  .  .  .  .  .  }
    55  .  .  .  .  .  }
    56  .  .  .  .  .  Tag: nil
    57  .  .  .  .  .  Comment: nil
    58  .  .  .  .  }
    59  .  .  .  }
    60  .  .  .  Closing: 141:29
    61  .  .  }
    62  .  .  Results: *ast.FieldList {
    63  .  .  .  Opening: -
    64  .  .  .  List: []*ast.Field (len = 1) {
    65  .  .  .  .  0: *ast.Field {
    66  .  .  .  .  .  Doc: nil
    67  .  .  .  .  .  Names: nil
    68  .  .  .  .  .  Type: *ast.Ident {
    69  .  .  .  .  .  .  NamePos: 141:31
    70  .  .  .  .  .  .  Name: "bool"
    71  .  .  .  .  .  .  Obj: nil
    72  .  .  .  .  .  }
    73  .  .  .  .  .  Tag: nil
    74  .  .  .  .  .  Comment: nil
    75  .  .  .  .  }
    76  .  .  .  }
    77  .  .  .  Closing: -
    78  .  .  }
    79  .  }
    80  .  Body: *ast.BlockStmt {
    81  .  .  Lbrace: 141:36
    82  .  .  List: []ast.Stmt (len = 1) {
    83  .  .  .  0: *ast.ReturnStmt {
    84  .  .  .  .  Return: 142:2
    85  .  .  .  .  Results: []ast.Expr (len = 1) {
    86  .  .  .  .  .  0: *ast.BinaryExpr {
    87  .  .  .  .  .  .  X: *ast.BinaryExpr {
    88  .  .  .  .  .  .  .  X: *ast.BinaryExpr {
    89  .  .  .  .  .  .  .  .  X: *ast.Ident {
    90  .  .  .  .  .  .  .  .  .  NamePos: 142:9
    91  .  .  .  .  .  .  .  .  .  Name: "n"
    92  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 32)
    93  .  .  .  .  .  .  .  .  }
    94  .  .  .  .  .  .  .  .  OpPos: 142:11
    95  .  .  .  .  .  .  .  .  Op: ==
    96  .  .  .  .  .  .  .  .  Y: *ast.Ident {
    97  .  .  .  .  .  .  .  .  .  NamePos: 142:14
    98  .  .  .  .  .  .  .  .  .  Name: "nil"
    99  .  .  .  .  .  .  .  .  .  Obj: nil
   100  .  .  .  .  .  .  .  .  }
   101  .  .  .  .  .  .  .  }
   102  .  .  .  .  .  .  .  OpPos: 142:18
   103  .  .  .  .  .  .  .  Op: ||
   104  .  .  .  .  .  .  .  Y: *ast.BinaryExpr {
   105  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   106  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   107  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   108  .  .  .  .  .  .  .  .  .  .  .  NamePos: 143:3
   109  .  .  .  .  .  .  .  .  .  .  .  Name: "n"
   110  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 32)
   111  .  .  .  .  .  .  .  .  .  .  }
   112  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   113  .  .  .  .  .  .  .  .  .  .  .  NamePos: 143:5
   114  .  .  .  .  .  .  .  .  .  .  .  Name: "Status"
   115  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   116  .  .  .  .  .  .  .  .  .  .  }
   117  .  .  .  .  .  .  .  .  .  }
   118  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   119  .  .  .  .  .  .  .  .  .  .  NamePos: 143:12
   120  .  .  .  .  .  .  .  .  .  .  Name: "State"
   121  .  .  .  .  .  .  .  .  .  .  Obj: nil
   122  .  .  .  .  .  .  .  .  .  }
   123  .  .  .  .  .  .  .  .  }
   124  .  .  .  .  .  .  .  .  OpPos: 143:18
   125  .  .  .  .  .  .  .  .  Op: ==
   126  .  .  .  .  .  .  .  .  Y: *ast.SelectorExpr {
   127  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   128  .  .  .  .  .  .  .  .  .  .  NamePos: 143:21
   129  .  .  .  .  .  .  .  .  .  .  Name: "api"
   130  .  .  .  .  .  .  .  .  .  .  Obj: nil
   131  .  .  .  .  .  .  .  .  .  }
   132  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   133  .  .  .  .  .  .  .  .  .  .  NamePos: 143:25
   134  .  .  .  .  .  .  .  .  .  .  Name: "NodeStatus_DOWN"
   135  .  .  .  .  .  .  .  .  .  .  Obj: nil
   136  .  .  .  .  .  .  .  .  .  }
   137  .  .  .  .  .  .  .  .  }
   138  .  .  .  .  .  .  .  }
   139  .  .  .  .  .  .  }
   140  .  .  .  .  .  .  OpPos: 143:41
   141  .  .  .  .  .  .  Op: ||
   142  .  .  .  .  .  .  Y: *ast.BinaryExpr {
   143  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   144  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   145  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   146  .  .  .  .  .  .  .  .  .  .  NamePos: 144:3
   147  .  .  .  .  .  .  .  .  .  .  Name: "n"
   148  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 32)
   149  .  .  .  .  .  .  .  .  .  }
   150  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   151  .  .  .  .  .  .  .  .  .  .  NamePos: 144:5
   152  .  .  .  .  .  .  .  .  .  .  Name: "Spec"
   153  .  .  .  .  .  .  .  .  .  .  Obj: nil
   154  .  .  .  .  .  .  .  .  .  }
   155  .  .  .  .  .  .  .  .  }
   156  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   157  .  .  .  .  .  .  .  .  .  NamePos: 144:10
   158  .  .  .  .  .  .  .  .  .  Name: "Availability"
   159  .  .  .  .  .  .  .  .  .  Obj: nil
   160  .  .  .  .  .  .  .  .  }
   161  .  .  .  .  .  .  .  }
   162  .  .  .  .  .  .  .  OpPos: 144:23
   163  .  .  .  .  .  .  .  Op: ==
   164  .  .  .  .  .  .  .  Y: *ast.SelectorExpr {
   165  .  .  .  .  .  .  .  .  X: *ast.Ident {
   166  .  .  .  .  .  .  .  .  .  NamePos: 144:26
   167  .  .  .  .  .  .  .  .  .  Name: "api"
   168  .  .  .  .  .  .  .  .  .  Obj: nil
   169  .  .  .  .  .  .  .  .  }
   170  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   171  .  .  .  .  .  .  .  .  .  NamePos: 144:30
   172  .  .  .  .  .  .  .  .  .  Name: "NodeAvailabilityDrain"
   173  .  .  .  .  .  .  .  .  .  Obj: nil
   174  .  .  .  .  .  .  .  .  }
   175  .  .  .  .  .  .  .  }
   176  .  .  .  .  .  .  }
   177  .  .  .  .  .  }
   178  .  .  .  .  }
   179  .  .  .  }
   180  .  .  }
   181  .  .  Rbrace: 145:1
   182  .  }
   183  }
     0  *ast.FuncDecl {
     1  .  Doc: nil
     2  .  Recv: nil
     3  .  Name: *ast.Ident {
     4  .  .  NamePos: 147:6
     5  .  .  Name: "taskTimestamp"
     6  .  .  Obj: *ast.Object {
     7  .  .  .  Kind: func
     8  .  .  .  Name: "taskTimestamp"
     9  .  .  .  Decl: *(obj @ 0)
    10  .  .  .  Data: nil
    11  .  .  .  Type: nil
    12  .  .  }
    13  .  }
    14  .  Type: *ast.FuncType {
    15  .  .  Func: 147:1
    16  .  .  Params: *ast.FieldList {
    17  .  .  .  Opening: 147:19
    18  .  .  .  List: []*ast.Field (len = 1) {
    19  .  .  .  .  0: *ast.Field {
    20  .  .  .  .  .  Doc: nil
    21  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
    22  .  .  .  .  .  .  0: *ast.Ident {
    23  .  .  .  .  .  .  .  NamePos: 147:20
    24  .  .  .  .  .  .  .  Name: "t"
    25  .  .  .  .  .  .  .  Obj: *ast.Object {
    26  .  .  .  .  .  .  .  .  Kind: var
    27  .  .  .  .  .  .  .  .  Name: "t"
    28  .  .  .  .  .  .  .  .  Decl: *(obj @ 19)
    29  .  .  .  .  .  .  .  .  Data: nil
    30  .  .  .  .  .  .  .  .  Type: nil
    31  .  .  .  .  .  .  .  }
    32  .  .  .  .  .  .  }
    33  .  .  .  .  .  }
    34  .  .  .  .  .  Type: *ast.StarExpr {
    35  .  .  .  .  .  .  Star: 147:22
    36  .  .  .  .  .  .  X: *ast.SelectorExpr {
    37  .  .  .  .  .  .  .  X: *ast.Ident {
    38  .  .  .  .  .  .  .  .  NamePos: 147:23
    39  .  .  .  .  .  .  .  .  Name: "api"
    40  .  .  .  .  .  .  .  .  Obj: nil
    41  .  .  .  .  .  .  .  }
    42  .  .  .  .  .  .  .  Sel: *ast.Ident {
    43  .  .  .  .  .  .  .  .  NamePos: 147:27
    44  .  .  .  .  .  .  .  .  Name: "Task"
    45  .  .  .  .  .  .  .  .  Obj: nil
    46  .  .  .  .  .  .  .  }
    47  .  .  .  .  .  .  }
    48  .  .  .  .  .  }
    49  .  .  .  .  .  Tag: nil
    50  .  .  .  .  .  Comment: nil
    51  .  .  .  .  }
    52  .  .  .  }
    53  .  .  .  Closing: 147:31
    54  .  .  }
    55  .  .  Results: *ast.FieldList {
    56  .  .  .  Opening: -
    57  .  .  .  List: []*ast.Field (len = 1) {
    58  .  .  .  .  0: *ast.Field {
    59  .  .  .  .  .  Doc: nil
    60  .  .  .  .  .  Names: nil
    61  .  .  .  .  .  Type: *ast.StarExpr {
    62  .  .  .  .  .  .  Star: 147:33
    63  .  .  .  .  .  .  X: *ast.SelectorExpr {
    64  .  .  .  .  .  .  .  X: *ast.Ident {
    65  .  .  .  .  .  .  .  .  NamePos: 147:34
    66  .  .  .  .  .  .  .  .  Name: "google_protobuf"
    67  .  .  .  .  .  .  .  .  Obj: nil
    68  .  .  .  .  .  .  .  }
    69  .  .  .  .  .  .  .  Sel: *ast.Ident {
    70  .  .  .  .  .  .  .  .  NamePos: 147:50
    71  .  .  .  .  .  .  .  .  Name: "Timestamp"
    72  .  .  .  .  .  .  .  .  Obj: nil
    73  .  .  .  .  .  .  .  }
    74  .  .  .  .  .  .  }
    75  .  .  .  .  .  }
    76  .  .  .  .  .  Tag: nil
    77  .  .  .  .  .  Comment: nil
    78  .  .  .  .  }
    79  .  .  .  }
    80  .  .  .  Closing: -
    81  .  .  }
    82  .  }
    83  .  Body: *ast.BlockStmt {
    84  .  .  Lbrace: 147:60
    85  .  .  List: []ast.Stmt (len = 2) {
    86  .  .  .  0: *ast.IfStmt {
    87  .  .  .  .  If: 148:2
    88  .  .  .  .  Init: nil
    89  .  .  .  .  Cond: *ast.BinaryExpr {
    90  .  .  .  .  .  X: *ast.SelectorExpr {
    91  .  .  .  .  .  .  X: *ast.SelectorExpr {
    92  .  .  .  .  .  .  .  X: *ast.Ident {
    93  .  .  .  .  .  .  .  .  NamePos: 148:5
    94  .  .  .  .  .  .  .  .  Name: "t"
    95  .  .  .  .  .  .  .  .  Obj: *(obj @ 25)
    96  .  .  .  .  .  .  .  }
    97  .  .  .  .  .  .  .  Sel: *ast.Ident {
    98  .  .  .  .  .  .  .  .  NamePos: 148:7
    99  .  .  .  .  .  .  .  .  Name: "Status"
   100  .  .  .  .  .  .  .  .  Obj: nil
   101  .  .  .  .  .  .  .  }
   102  .  .  .  .  .  .  }
   103  .  .  .  .  .  .  Sel: *ast.Ident {
   104  .  .  .  .  .  .  .  NamePos: 148:14
   105  .  .  .  .  .  .  .  Name: "AppliedAt"
   106  .  .  .  .  .  .  .  Obj: nil
   107  .  .  .  .  .  .  }
   108  .  .  .  .  .  }
   109  .  .  .  .  .  OpPos: 148:24
   110  .  .  .  .  .  Op: !=
   111  .  .  .  .  .  Y: *ast.Ident {
   112  .  .  .  .  .  .  NamePos: 148:27
   113  .  .  .  .  .  .  Name: "nil"
   114  .  .  .  .  .  .  Obj: nil
   115  .  .  .  .  .  }
   116  .  .  .  .  }
   117  .  .  .  .  Body: *ast.BlockStmt {
   118  .  .  .  .  .  Lbrace: 148:31
   119  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   120  .  .  .  .  .  .  0: *ast.ReturnStmt {
   121  .  .  .  .  .  .  .  Return: 149:3
   122  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   123  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   124  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   125  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   126  .  .  .  .  .  .  .  .  .  .  .  NamePos: 149:10
   127  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   128  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 25)
   129  .  .  .  .  .  .  .  .  .  .  }
   130  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   131  .  .  .  .  .  .  .  .  .  .  .  NamePos: 149:12
   132  .  .  .  .  .  .  .  .  .  .  .  Name: "Status"
   133  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   134  .  .  .  .  .  .  .  .  .  .  }
   135  .  .  .  .  .  .  .  .  .  }
   136  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   137  .  .  .  .  .  .  .  .  .  .  NamePos: 149:19
   138  .  .  .  .  .  .  .  .  .  .  Name: "AppliedAt"
   139  .  .  .  .  .  .  .  .  .  .  Obj: nil
   140  .  .  .  .  .  .  .  .  .  }
   141  .  .  .  .  .  .  .  .  }
   142  .  .  .  .  .  .  .  }
   143  .  .  .  .  .  .  }
   144  .  .  .  .  .  }
   145  .  .  .  .  .  Rbrace: 150:2
   146  .  .  .  .  }
   147  .  .  .  .  Else: nil
   148  .  .  .  }
   149  .  .  .  1: *ast.ReturnStmt {
   150  .  .  .  .  Return: 152:2
   151  .  .  .  .  Results: []ast.Expr (len = 1) {
   152  .  .  .  .  .  0: *ast.SelectorExpr {
   153  .  .  .  .  .  .  X: *ast.SelectorExpr {
   154  .  .  .  .  .  .  .  X: *ast.Ident {
   155  .  .  .  .  .  .  .  .  NamePos: 152:9
   156  .  .  .  .  .  .  .  .  Name: "t"
   157  .  .  .  .  .  .  .  .  Obj: *(obj @ 25)
   158  .  .  .  .  .  .  .  }
   159  .  .  .  .  .  .  .  Sel: *ast.Ident {
   160  .  .  .  .  .  .  .  .  NamePos: 152:11
   161  .  .  .  .  .  .  .  .  Name: "Status"
   162  .  .  .  .  .  .  .  .  Obj: nil
   163  .  .  .  .  .  .  .  }
   164  .  .  .  .  .  .  }
   165  .  .  .  .  .  .  Sel: *ast.Ident {
   166  .  .  .  .  .  .  .  NamePos: 152:18
   167  .  .  .  .  .  .  .  Name: "Timestamp"
   168  .  .  .  .  .  .  .  Obj: nil
   169  .  .  .  .  .  .  }
   170  .  .  .  .  .  }
   171  .  .  .  .  }
   172  .  .  .  }
   173  .  .  }
   174  .  .  Rbrace: 153:1
   175  .  }
   176  }
     0  *ast.GenDecl {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 2) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: 155:1
     5  .  .  .  .  Text: "// TasksByTimestamp sorts tasks by applied timestamp if available, otherwise"
     6  .  .  .  }
     7  .  .  .  1: *ast.Comment {
     8  .  .  .  .  Slash: 156:1
     9  .  .  .  .  Text: "// status timestamp."
    10  .  .  .  }
    11  .  .  }
    12  .  }
    13  .  TokPos: 157:1
    14  .  Tok: type
    15  .  Lparen: -
    16  .  Specs: []ast.Spec (len = 1) {
    17  .  .  0: *ast.TypeSpec {
    18  .  .  .  Doc: nil
    19  .  .  .  Name: *ast.Ident {
    20  .  .  .  .  NamePos: 157:6
    21  .  .  .  .  Name: "TasksByTimestamp"
    22  .  .  .  .  Obj: *ast.Object {
    23  .  .  .  .  .  Kind: type
    24  .  .  .  .  .  Name: "TasksByTimestamp"
    25  .  .  .  .  .  Decl: *(obj @ 17)
    26  .  .  .  .  .  Data: nil
    27  .  .  .  .  .  Type: nil
    28  .  .  .  .  }
    29  .  .  .  }
    30  .  .  .  Assign: -
    31  .  .  .  Type: *ast.ArrayType {
    32  .  .  .  .  Lbrack: 157:23
    33  .  .  .  .  Len: nil
    34  .  .  .  .  Elt: *ast.StarExpr {
    35  .  .  .  .  .  Star: 157:25
    36  .  .  .  .  .  X: *ast.SelectorExpr {
    37  .  .  .  .  .  .  X: *ast.Ident {
    38  .  .  .  .  .  .  .  NamePos: 157:26
    39  .  .  .  .  .  .  .  Name: "api"
    40  .  .  .  .  .  .  .  Obj: nil
    41  .  .  .  .  .  .  }
    42  .  .  .  .  .  .  Sel: *ast.Ident {
    43  .  .  .  .  .  .  .  NamePos: 157:30
    44  .  .  .  .  .  .  .  Name: "Task"
    45  .  .  .  .  .  .  .  Obj: nil
    46  .  .  .  .  .  .  }
    47  .  .  .  .  .  }
    48  .  .  .  .  }
    49  .  .  .  }
    50  .  .  .  Comment: nil
    51  .  .  }
    52  .  }
    53  .  Rparen: -
    54  }
     0  *ast.FuncDecl {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: 159:1
     5  .  .  .  .  Text: "// Len implements the Len method for sorting."
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  Recv: *ast.FieldList {
    10  .  .  Opening: 160:6
    11  .  .  List: []*ast.Field (len = 1) {
    12  .  .  .  0: *ast.Field {
    13  .  .  .  .  Doc: nil
    14  .  .  .  .  Names: []*ast.Ident (len = 1) {
    15  .  .  .  .  .  0: *ast.Ident {
    16  .  .  .  .  .  .  NamePos: 160:7
    17  .  .  .  .  .  .  Name: "t"
    18  .  .  .  .  .  .  Obj: *ast.Object {
    19  .  .  .  .  .  .  .  Kind: var
    20  .  .  .  .  .  .  .  Name: "t"
    21  .  .  .  .  .  .  .  Decl: *(obj @ 12)
    22  .  .  .  .  .  .  .  Data: nil
    23  .  .  .  .  .  .  .  Type: nil
    24  .  .  .  .  .  .  }
    25  .  .  .  .  .  }
    26  .  .  .  .  }
    27  .  .  .  .  Type: *ast.Ident {
    28  .  .  .  .  .  NamePos: 160:9
    29  .  .  .  .  .  Name: "TasksByTimestamp"
    30  .  .  .  .  .  Obj: *ast.Object {
    31  .  .  .  .  .  .  Kind: type
    32  .  .  .  .  .  .  Name: "TasksByTimestamp"
    33  .  .  .  .  .  .  Decl: *ast.TypeSpec {
    34  .  .  .  .  .  .  .  Doc: nil
    35  .  .  .  .  .  .  .  Name: *ast.Ident {
    36  .  .  .  .  .  .  .  .  NamePos: 157:6
    37  .  .  .  .  .  .  .  .  Name: "TasksByTimestamp"
    38  .  .  .  .  .  .  .  .  Obj: *(obj @ 30)
    39  .  .  .  .  .  .  .  }
    40  .  .  .  .  .  .  .  Assign: -
    41  .  .  .  .  .  .  .  Type: *ast.ArrayType {
    42  .  .  .  .  .  .  .  .  Lbrack: 157:23
    43  .  .  .  .  .  .  .  .  Len: nil
    44  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
    45  .  .  .  .  .  .  .  .  .  Star: 157:25
    46  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
    47  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
    48  .  .  .  .  .  .  .  .  .  .  .  NamePos: 157:26
    49  .  .  .  .  .  .  .  .  .  .  .  Name: "api"
    50  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
    51  .  .  .  .  .  .  .  .  .  .  }
    52  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
    53  .  .  .  .  .  .  .  .  .  .  .  NamePos: 157:30
    54  .  .  .  .  .  .  .  .  .  .  .  Name: "Task"
    55  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
    56  .  .  .  .  .  .  .  .  .  .  }
    57  .  .  .  .  .  .  .  .  .  }
    58  .  .  .  .  .  .  .  .  }
    59  .  .  .  .  .  .  .  }
    60  .  .  .  .  .  .  .  Comment: nil
    61  .  .  .  .  .  .  }
    62  .  .  .  .  .  .  Data: nil
    63  .  .  .  .  .  .  Type: nil
    64  .  .  .  .  .  }
    65  .  .  .  .  }
    66  .  .  .  .  Tag: nil
    67  .  .  .  .  Comment: nil
    68  .  .  .  }
    69  .  .  }
    70  .  .  Closing: 160:25
    71  .  }
    72  .  Name: *ast.Ident {
    73  .  .  NamePos: 160:27
    74  .  .  Name: "Len"
    75  .  .  Obj: nil
    76  .  }
    77  .  Type: *ast.FuncType {
    78  .  .  Func: 160:1
    79  .  .  Params: *ast.FieldList {
    80  .  .  .  Opening: 160:30
    81  .  .  .  List: nil
    82  .  .  .  Closing: 160:31
    83  .  .  }
    84  .  .  Results: *ast.FieldList {
    85  .  .  .  Opening: -
    86  .  .  .  List: []*ast.Field (len = 1) {
    87  .  .  .  .  0: *ast.Field {
    88  .  .  .  .  .  Doc: nil
    89  .  .  .  .  .  Names: nil
    90  .  .  .  .  .  Type: *ast.Ident {
    91  .  .  .  .  .  .  NamePos: 160:33
    92  .  .  .  .  .  .  Name: "int"
    93  .  .  .  .  .  .  Obj: nil
    94  .  .  .  .  .  }
    95  .  .  .  .  .  Tag: nil
    96  .  .  .  .  .  Comment: nil
    97  .  .  .  .  }
    98  .  .  .  }
    99  .  .  .  Closing: -
   100  .  .  }
   101  .  }
   102  .  Body: *ast.BlockStmt {
   103  .  .  Lbrace: 160:37
   104  .  .  List: []ast.Stmt (len = 1) {
   105  .  .  .  0: *ast.ReturnStmt {
   106  .  .  .  .  Return: 161:2
   107  .  .  .  .  Results: []ast.Expr (len = 1) {
   108  .  .  .  .  .  0: *ast.CallExpr {
   109  .  .  .  .  .  .  Fun: *ast.Ident {
   110  .  .  .  .  .  .  .  NamePos: 161:9
   111  .  .  .  .  .  .  .  Name: "len"
   112  .  .  .  .  .  .  .  Obj: nil
   113  .  .  .  .  .  .  }
   114  .  .  .  .  .  .  Lparen: 161:12
   115  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   116  .  .  .  .  .  .  .  0: *ast.Ident {
   117  .  .  .  .  .  .  .  .  NamePos: 161:13
   118  .  .  .  .  .  .  .  .  Name: "t"
   119  .  .  .  .  .  .  .  .  Obj: *(obj @ 18)
   120  .  .  .  .  .  .  .  }
   121  .  .  .  .  .  .  }
   122  .  .  .  .  .  .  Ellipsis: -
   123  .  .  .  .  .  .  Rparen: 161:14
   124  .  .  .  .  .  }
   125  .  .  .  .  }
   126  .  .  .  }
   127  .  .  }
   128  .  .  Rbrace: 162:1
   129  .  }
   130  }
     0  *ast.FuncDecl {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: 164:1
     5  .  .  .  .  Text: "// Swap implements the Swap method for sorting."
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  Recv: *ast.FieldList {
    10  .  .  Opening: 165:6
    11  .  .  List: []*ast.Field (len = 1) {
    12  .  .  .  0: *ast.Field {
    13  .  .  .  .  Doc: nil
    14  .  .  .  .  Names: []*ast.Ident (len = 1) {
    15  .  .  .  .  .  0: *ast.Ident {
    16  .  .  .  .  .  .  NamePos: 165:7
    17  .  .  .  .  .  .  Name: "t"
    18  .  .  .  .  .  .  Obj: *ast.Object {
    19  .  .  .  .  .  .  .  Kind: var
    20  .  .  .  .  .  .  .  Name: "t"
    21  .  .  .  .  .  .  .  Decl: *(obj @ 12)
    22  .  .  .  .  .  .  .  Data: nil
    23  .  .  .  .  .  .  .  Type: nil
    24  .  .  .  .  .  .  }
    25  .  .  .  .  .  }
    26  .  .  .  .  }
    27  .  .  .  .  Type: *ast.Ident {
    28  .  .  .  .  .  NamePos: 165:9
    29  .  .  .  .  .  Name: "TasksByTimestamp"
    30  .  .  .  .  .  Obj: *ast.Object {
    31  .  .  .  .  .  .  Kind: type
    32  .  .  .  .  .  .  Name: "TasksByTimestamp"
    33  .  .  .  .  .  .  Decl: *ast.TypeSpec {
    34  .  .  .  .  .  .  .  Doc: nil
    35  .  .  .  .  .  .  .  Name: *ast.Ident {
    36  .  .  .  .  .  .  .  .  NamePos: 157:6
    37  .  .  .  .  .  .  .  .  Name: "TasksByTimestamp"
    38  .  .  .  .  .  .  .  .  Obj: *(obj @ 30)
    39  .  .  .  .  .  .  .  }
    40  .  .  .  .  .  .  .  Assign: -
    41  .  .  .  .  .  .  .  Type: *ast.ArrayType {
    42  .  .  .  .  .  .  .  .  Lbrack: 157:23
    43  .  .  .  .  .  .  .  .  Len: nil
    44  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
    45  .  .  .  .  .  .  .  .  .  Star: 157:25
    46  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
    47  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
    48  .  .  .  .  .  .  .  .  .  .  .  NamePos: 157:26
    49  .  .  .  .  .  .  .  .  .  .  .  Name: "api"
    50  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
    51  .  .  .  .  .  .  .  .  .  .  }
    52  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
    53  .  .  .  .  .  .  .  .  .  .  .  NamePos: 157:30
    54  .  .  .  .  .  .  .  .  .  .  .  Name: "Task"
    55  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
    56  .  .  .  .  .  .  .  .  .  .  }
    57  .  .  .  .  .  .  .  .  .  }
    58  .  .  .  .  .  .  .  .  }
    59  .  .  .  .  .  .  .  }
    60  .  .  .  .  .  .  .  Comment: nil
    61  .  .  .  .  .  .  }
    62  .  .  .  .  .  .  Data: nil
    63  .  .  .  .  .  .  Type: nil
    64  .  .  .  .  .  }
    65  .  .  .  .  }
    66  .  .  .  .  Tag: nil
    67  .  .  .  .  Comment: nil
    68  .  .  .  }
    69  .  .  }
    70  .  .  Closing: 165:25
    71  .  }
    72  .  Name: *ast.Ident {
    73  .  .  NamePos: 165:27
    74  .  .  Name: "Swap"
    75  .  .  Obj: nil
    76  .  }
    77  .  Type: *ast.FuncType {
    78  .  .  Func: 165:1
    79  .  .  Params: *ast.FieldList {
    80  .  .  .  Opening: 165:31
    81  .  .  .  List: []*ast.Field (len = 1) {
    82  .  .  .  .  0: *ast.Field {
    83  .  .  .  .  .  Doc: nil
    84  .  .  .  .  .  Names: []*ast.Ident (len = 2) {
    85  .  .  .  .  .  .  0: *ast.Ident {
    86  .  .  .  .  .  .  .  NamePos: 165:32
    87  .  .  .  .  .  .  .  Name: "i"
    88  .  .  .  .  .  .  .  Obj: *ast.Object {
    89  .  .  .  .  .  .  .  .  Kind: var
    90  .  .  .  .  .  .  .  .  Name: "i"
    91  .  .  .  .  .  .  .  .  Decl: *(obj @ 82)
    92  .  .  .  .  .  .  .  .  Data: nil
    93  .  .  .  .  .  .  .  .  Type: nil
    94  .  .  .  .  .  .  .  }
    95  .  .  .  .  .  .  }
    96  .  .  .  .  .  .  1: *ast.Ident {
    97  .  .  .  .  .  .  .  NamePos: 165:35
    98  .  .  .  .  .  .  .  Name: "j"
    99  .  .  .  .  .  .  .  Obj: *ast.Object {
   100  .  .  .  .  .  .  .  .  Kind: var
   101  .  .  .  .  .  .  .  .  Name: "j"
   102  .  .  .  .  .  .  .  .  Decl: *(obj @ 82)
   103  .  .  .  .  .  .  .  .  Data: nil
   104  .  .  .  .  .  .  .  .  Type: nil
   105  .  .  .  .  .  .  .  }
   106  .  .  .  .  .  .  }
   107  .  .  .  .  .  }
   108  .  .  .  .  .  Type: *ast.Ident {
   109  .  .  .  .  .  .  NamePos: 165:37
   110  .  .  .  .  .  .  Name: "int"
   111  .  .  .  .  .  .  Obj: nil
   112  .  .  .  .  .  }
   113  .  .  .  .  .  Tag: nil
   114  .  .  .  .  .  Comment: nil
   115  .  .  .  .  }
   116  .  .  .  }
   117  .  .  .  Closing: 165:40
   118  .  .  }
   119  .  .  Results: nil
   120  .  }
   121  .  Body: *ast.BlockStmt {
   122  .  .  Lbrace: 165:42
   123  .  .  List: []ast.Stmt (len = 1) {
   124  .  .  .  0: *ast.AssignStmt {
   125  .  .  .  .  Lhs: []ast.Expr (len = 2) {
   126  .  .  .  .  .  0: *ast.IndexExpr {
   127  .  .  .  .  .  .  X: *ast.Ident {
   128  .  .  .  .  .  .  .  NamePos: 166:2
   129  .  .  .  .  .  .  .  Name: "t"
   130  .  .  .  .  .  .  .  Obj: *(obj @ 18)
   131  .  .  .  .  .  .  }
   132  .  .  .  .  .  .  Lbrack: 166:3
   133  .  .  .  .  .  .  Index: *ast.Ident {
   134  .  .  .  .  .  .  .  NamePos: 166:4
   135  .  .  .  .  .  .  .  Name: "i"
   136  .  .  .  .  .  .  .  Obj: *(obj @ 88)
   137  .  .  .  .  .  .  }
   138  .  .  .  .  .  .  Rbrack: 166:5
   139  .  .  .  .  .  }
   140  .  .  .  .  .  1: *ast.IndexExpr {
   141  .  .  .  .  .  .  X: *ast.Ident {
   142  .  .  .  .  .  .  .  NamePos: 166:8
   143  .  .  .  .  .  .  .  Name: "t"
   144  .  .  .  .  .  .  .  Obj: *(obj @ 18)
   145  .  .  .  .  .  .  }
   146  .  .  .  .  .  .  Lbrack: 166:9
   147  .  .  .  .  .  .  Index: *ast.Ident {
   148  .  .  .  .  .  .  .  NamePos: 166:10
   149  .  .  .  .  .  .  .  Name: "j"
   150  .  .  .  .  .  .  .  Obj: *(obj @ 99)
   151  .  .  .  .  .  .  }
   152  .  .  .  .  .  .  Rbrack: 166:11
   153  .  .  .  .  .  }
   154  .  .  .  .  }
   155  .  .  .  .  TokPos: 166:13
   156  .  .  .  .  Tok: =
   157  .  .  .  .  Rhs: []ast.Expr (len = 2) {
   158  .  .  .  .  .  0: *ast.IndexExpr {
   159  .  .  .  .  .  .  X: *ast.Ident {
   160  .  .  .  .  .  .  .  NamePos: 166:15
   161  .  .  .  .  .  .  .  Name: "t"
   162  .  .  .  .  .  .  .  Obj: *(obj @ 18)
   163  .  .  .  .  .  .  }
   164  .  .  .  .  .  .  Lbrack: 166:16
   165  .  .  .  .  .  .  Index: *ast.Ident {
   166  .  .  .  .  .  .  .  NamePos: 166:17
   167  .  .  .  .  .  .  .  Name: "j"
   168  .  .  .  .  .  .  .  Obj: *(obj @ 99)
   169  .  .  .  .  .  .  }
   170  .  .  .  .  .  .  Rbrack: 166:18
   171  .  .  .  .  .  }
   172  .  .  .  .  .  1: *ast.IndexExpr {
   173  .  .  .  .  .  .  X: *ast.Ident {
   174  .  .  .  .  .  .  .  NamePos: 166:21
   175  .  .  .  .  .  .  .  Name: "t"
   176  .  .  .  .  .  .  .  Obj: *(obj @ 18)
   177  .  .  .  .  .  .  }
   178  .  .  .  .  .  .  Lbrack: 166:22
   179  .  .  .  .  .  .  Index: *ast.Ident {
   180  .  .  .  .  .  .  .  NamePos: 166:23
   181  .  .  .  .  .  .  .  Name: "i"
   182  .  .  .  .  .  .  .  Obj: *(obj @ 88)
   183  .  .  .  .  .  .  }
   184  .  .  .  .  .  .  Rbrack: 166:24
   185  .  .  .  .  .  }
   186  .  .  .  .  }
   187  .  .  .  }
   188  .  .  }
   189  .  .  Rbrace: 167:1
   190  .  }
   191  }
     0  *ast.FuncDecl {
     1  .  Doc: *ast.CommentGroup {
     2  .  .  List: []*ast.Comment (len = 1) {
     3  .  .  .  0: *ast.Comment {
     4  .  .  .  .  Slash: 169:1
     5  .  .  .  .  Text: "// Less implements the Less method for sorting."
     6  .  .  .  }
     7  .  .  }
     8  .  }
     9  .  Recv: *ast.FieldList {
    10  .  .  Opening: 170:6
    11  .  .  List: []*ast.Field (len = 1) {
    12  .  .  .  0: *ast.Field {
    13  .  .  .  .  Doc: nil
    14  .  .  .  .  Names: []*ast.Ident (len = 1) {
    15  .  .  .  .  .  0: *ast.Ident {
    16  .  .  .  .  .  .  NamePos: 170:7
    17  .  .  .  .  .  .  Name: "t"
    18  .  .  .  .  .  .  Obj: *ast.Object {
    19  .  .  .  .  .  .  .  Kind: var
    20  .  .  .  .  .  .  .  Name: "t"
    21  .  .  .  .  .  .  .  Decl: *(obj @ 12)
    22  .  .  .  .  .  .  .  Data: nil
    23  .  .  .  .  .  .  .  Type: nil
    24  .  .  .  .  .  .  }
    25  .  .  .  .  .  }
    26  .  .  .  .  }
    27  .  .  .  .  Type: *ast.Ident {
    28  .  .  .  .  .  NamePos: 170:9
    29  .  .  .  .  .  Name: "TasksByTimestamp"
    30  .  .  .  .  .  Obj: *ast.Object {
    31  .  .  .  .  .  .  Kind: type
    32  .  .  .  .  .  .  Name: "TasksByTimestamp"
    33  .  .  .  .  .  .  Decl: *ast.TypeSpec {
    34  .  .  .  .  .  .  .  Doc: nil
    35  .  .  .  .  .  .  .  Name: *ast.Ident {
    36  .  .  .  .  .  .  .  .  NamePos: 157:6
    37  .  .  .  .  .  .  .  .  Name: "TasksByTimestamp"
    38  .  .  .  .  .  .  .  .  Obj: *(obj @ 30)
    39  .  .  .  .  .  .  .  }
    40  .  .  .  .  .  .  .  Assign: -
    41  .  .  .  .  .  .  .  Type: *ast.ArrayType {
    42  .  .  .  .  .  .  .  .  Lbrack: 157:23
    43  .  .  .  .  .  .  .  .  Len: nil
    44  .  .  .  .  .  .  .  .  Elt: *ast.StarExpr {
    45  .  .  .  .  .  .  .  .  .  Star: 157:25
    46  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
    47  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
    48  .  .  .  .  .  .  .  .  .  .  .  NamePos: 157:26
    49  .  .  .  .  .  .  .  .  .  .  .  Name: "api"
    50  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
    51  .  .  .  .  .  .  .  .  .  .  }
    52  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
    53  .  .  .  .  .  .  .  .  .  .  .  NamePos: 157:30
    54  .  .  .  .  .  .  .  .  .  .  .  Name: "Task"
    55  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
    56  .  .  .  .  .  .  .  .  .  .  }
    57  .  .  .  .  .  .  .  .  .  }
    58  .  .  .  .  .  .  .  .  }
    59  .  .  .  .  .  .  .  }
    60  .  .  .  .  .  .  .  Comment: nil
    61  .  .  .  .  .  .  }
    62  .  .  .  .  .  .  Data: nil
    63  .  .  .  .  .  .  Type: nil
    64  .  .  .  .  .  }
    65  .  .  .  .  }
    66  .  .  .  .  Tag: nil
    67  .  .  .  .  Comment: nil
    68  .  .  .  }
    69  .  .  }
    70  .  .  Closing: 170:25
    71  .  }
    72  .  Name: *ast.Ident {
    73  .  .  NamePos: 170:27
    74  .  .  Name: "Less"
    75  .  .  Obj: nil
    76  .  }
    77  .  Type: *ast.FuncType {
    78  .  .  Func: 170:1
    79  .  .  Params: *ast.FieldList {
    80  .  .  .  Opening: 170:31
    81  .  .  .  List: []*ast.Field (len = 1) {
    82  .  .  .  .  0: *ast.Field {
    83  .  .  .  .  .  Doc: nil
    84  .  .  .  .  .  Names: []*ast.Ident (len = 2) {
    85  .  .  .  .  .  .  0: *ast.Ident {
    86  .  .  .  .  .  .  .  NamePos: 170:32
    87  .  .  .  .  .  .  .  Name: "i"
    88  .  .  .  .  .  .  .  Obj: *ast.Object {
    89  .  .  .  .  .  .  .  .  Kind: var
    90  .  .  .  .  .  .  .  .  Name: "i"
    91  .  .  .  .  .  .  .  .  Decl: *(obj @ 82)
    92  .  .  .  .  .  .  .  .  Data: nil
    93  .  .  .  .  .  .  .  .  Type: nil
    94  .  .  .  .  .  .  .  }
    95  .  .  .  .  .  .  }
    96  .  .  .  .  .  .  1: *ast.Ident {
    97  .  .  .  .  .  .  .  NamePos: 170:35
    98  .  .  .  .  .  .  .  Name: "j"
    99  .  .  .  .  .  .  .  Obj: *ast.Object {
   100  .  .  .  .  .  .  .  .  Kind: var
   101  .  .  .  .  .  .  .  .  Name: "j"
   102  .  .  .  .  .  .  .  .  Decl: *(obj @ 82)
   103  .  .  .  .  .  .  .  .  Data: nil
   104  .  .  .  .  .  .  .  .  Type: nil
   105  .  .  .  .  .  .  .  }
   106  .  .  .  .  .  .  }
   107  .  .  .  .  .  }
   108  .  .  .  .  .  Type: *ast.Ident {
   109  .  .  .  .  .  .  NamePos: 170:37
   110  .  .  .  .  .  .  Name: "int"
   111  .  .  .  .  .  .  Obj: nil
   112  .  .  .  .  .  }
   113  .  .  .  .  .  Tag: nil
   114  .  .  .  .  .  Comment: nil
   115  .  .  .  .  }
   116  .  .  .  }
   117  .  .  .  Closing: 170:40
   118  .  .  }
   119  .  .  Results: *ast.FieldList {
   120  .  .  .  Opening: -
   121  .  .  .  List: []*ast.Field (len = 1) {
   122  .  .  .  .  0: *ast.Field {
   123  .  .  .  .  .  Doc: nil
   124  .  .  .  .  .  Names: nil
   125  .  .  .  .  .  Type: *ast.Ident {
   126  .  .  .  .  .  .  NamePos: 170:42
   127  .  .  .  .  .  .  Name: "bool"
   128  .  .  .  .  .  .  Obj: nil
   129  .  .  .  .  .  }
   130  .  .  .  .  .  Tag: nil
   131  .  .  .  .  .  Comment: nil
   132  .  .  .  .  }
   133  .  .  .  }
   134  .  .  .  Closing: -
   135  .  .  }
   136  .  }
   137  .  Body: *ast.BlockStmt {
   138  .  .  Lbrace: 170:47
   139  .  .  List: []ast.Stmt (len = 7) {
   140  .  .  .  0: *ast.AssignStmt {
   141  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   142  .  .  .  .  .  0: *ast.Ident {
   143  .  .  .  .  .  .  NamePos: 171:2
   144  .  .  .  .  .  .  Name: "iTimestamp"
   145  .  .  .  .  .  .  Obj: *ast.Object {
   146  .  .  .  .  .  .  .  Kind: var
   147  .  .  .  .  .  .  .  Name: "iTimestamp"
   148  .  .  .  .  .  .  .  Decl: *(obj @ 140)
   149  .  .  .  .  .  .  .  Data: nil
   150  .  .  .  .  .  .  .  Type: nil
   151  .  .  .  .  .  .  }
   152  .  .  .  .  .  }
   153  .  .  .  .  }
   154  .  .  .  .  TokPos: 171:13
   155  .  .  .  .  Tok: :=
   156  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   157  .  .  .  .  .  0: *ast.CallExpr {
   158  .  .  .  .  .  .  Fun: *ast.Ident {
   159  .  .  .  .  .  .  .  NamePos: 171:16
   160  .  .  .  .  .  .  .  Name: "taskTimestamp"
   161  .  .  .  .  .  .  .  Obj: *ast.Object {
   162  .  .  .  .  .  .  .  .  Kind: func
   163  .  .  .  .  .  .  .  .  Name: "taskTimestamp"
   164  .  .  .  .  .  .  .  .  Decl: *ast.FuncDecl {
   165  .  .  .  .  .  .  .  .  .  Doc: nil
   166  .  .  .  .  .  .  .  .  .  Recv: nil
   167  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
   168  .  .  .  .  .  .  .  .  .  .  NamePos: 147:6
   169  .  .  .  .  .  .  .  .  .  .  Name: "taskTimestamp"
   170  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 161)
   171  .  .  .  .  .  .  .  .  .  }
   172  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
   173  .  .  .  .  .  .  .  .  .  .  Func: 147:1
   174  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
   175  .  .  .  .  .  .  .  .  .  .  .  Opening: 147:19
   176  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   177  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   178  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   179  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
   180  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
   181  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 147:20
   182  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   183  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
   184  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
   185  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   186  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 177)
   187  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Data: nil
   188  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: nil
   189  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   190  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   191  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   192  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   193  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Star: 147:22
   194  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   195  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   196  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 147:23
   197  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "api"
   198  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   199  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   200  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   201  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 147:27
   202  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Task"
   203  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   204  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   205  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   206  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   207  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   208  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   209  .  .  .  .  .  .  .  .  .  .  .  .  }
   210  .  .  .  .  .  .  .  .  .  .  .  }
   211  .  .  .  .  .  .  .  .  .  .  .  Closing: 147:31
   212  .  .  .  .  .  .  .  .  .  .  }
   213  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
   214  .  .  .  .  .  .  .  .  .  .  .  Opening: -
   215  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
   216  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
   217  .  .  .  .  .  .  .  .  .  .  .  .  .  Doc: nil
   218  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: nil
   219  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.StarExpr {
   220  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Star: 147:33
   221  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   222  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   223  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 147:34
   224  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "google_protobuf"
   225  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   226  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   227  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   228  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 147:50
   229  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Timestamp"
   230  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   231  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   232  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   233  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   234  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: nil
   235  .  .  .  .  .  .  .  .  .  .  .  .  .  Comment: nil
   236  .  .  .  .  .  .  .  .  .  .  .  .  }
   237  .  .  .  .  .  .  .  .  .  .  .  }
   238  .  .  .  .  .  .  .  .  .  .  .  Closing: -
   239  .  .  .  .  .  .  .  .  .  .  }
   240  .  .  .  .  .  .  .  .  .  }
   241  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   242  .  .  .  .  .  .  .  .  .  .  Lbrace: 147:60
   243  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 2) {
   244  .  .  .  .  .  .  .  .  .  .  .  0: *ast.IfStmt {
   245  .  .  .  .  .  .  .  .  .  .  .  .  If: 148:2
   246  .  .  .  .  .  .  .  .  .  .  .  .  Init: nil
   247  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.BinaryExpr {
   248  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   249  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   250  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   251  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 148:5
   252  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   253  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 183)
   254  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   255  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   256  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 148:7
   257  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Status"
   258  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   259  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   260  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   261  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   262  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 148:14
   263  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "AppliedAt"
   264  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   265  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   266  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   267  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 148:24
   268  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !=
   269  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.Ident {
   270  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 148:27
   271  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
   272  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   273  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   274  .  .  .  .  .  .  .  .  .  .  .  .  }
   275  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
   276  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: 148:31
   277  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   278  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
   279  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: 149:3
   280  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   281  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   282  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   283  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   284  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 149:10
   285  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   286  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 183)
   287  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   288  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   289  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 149:12
   290  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Status"
   291  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   292  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   293  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   294  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   295  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 149:19
   296  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "AppliedAt"
   297  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   298  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   299  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   300  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   301  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   302  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   303  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: 150:2
   304  .  .  .  .  .  .  .  .  .  .  .  .  }
   305  .  .  .  .  .  .  .  .  .  .  .  .  Else: nil
   306  .  .  .  .  .  .  .  .  .  .  .  }
   307  .  .  .  .  .  .  .  .  .  .  .  1: *ast.ReturnStmt {
   308  .  .  .  .  .  .  .  .  .  .  .  .  Return: 152:2
   309  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   310  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.SelectorExpr {
   311  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.SelectorExpr {
   312  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
   313  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 152:9
   314  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "t"
   315  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 183)
   316  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   317  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   318  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 152:11
   319  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Status"
   320  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   321  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   322  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   323  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
   324  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 152:18
   325  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Timestamp"
   326  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: nil
   327  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   328  .  .  .  .  .  .  .  .  .  .  .  .  .  }
   329  .  .  .  .  .  .  .  .  .  .  .  .  }
   330  .  .  .  .  .  .  .  .  .  .  .  }
   331  .  .  .  .  .  .  .  .  .  .  }
   332  .  .  .  .  .  .  .  .  .  .  Rbrace: 153:1
   333  .  .  .  .  .  .  .  .  .  }
   334  .  .  .  .  .  .  .  .  }
   335  .  .  .  .  .  .  .  .  Data: nil
   336  .  .  .  .  .  .  .  .  Type: nil
   337  .  .  .  .  .  .  .  }
   338  .  .  .  .  .  .  }
   339  .  .  .  .  .  .  Lparen: 171:29
   340  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   341  .  .  .  .  .  .  .  0: *ast.IndexExpr {
   342  .  .  .  .  .  .  .  .  X: *ast.Ident {
   343  .  .  .  .  .  .  .  .  .  NamePos: 171:30
   344  .  .  .  .  .  .  .  .  .  Name: "t"
   345  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 18)
   346  .  .  .  .  .  .  .  .  }
   347  .  .  .  .  .  .  .  .  Lbrack: 171:31
   348  .  .  .  .  .  .  .  .  Index: *ast.Ident {
   349  .  .  .  .  .  .  .  .  .  NamePos: 171:32
   350  .  .  .  .  .  .  .  .  .  Name: "i"
   351  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 88)
   352  .  .  .  .  .  .  .  .  }
   353  .  .  .  .  .  .  .  .  Rbrack: 171:33
   354  .  .  .  .  .  .  .  }
   355  .  .  .  .  .  .  }
   356  .  .  .  .  .  .  Ellipsis: -
   357  .  .  .  .  .  .  Rparen: 171:34
   358  .  .  .  .  .  }
   359  .  .  .  .  }
   360  .  .  .  }
   361  .  .  .  1: *ast.AssignStmt {
   362  .  .  .  .  Lhs: []ast.Expr (len = 1) {
   363  .  .  .  .  .  0: *ast.Ident {
   364  .  .  .  .  .  .  NamePos: 172:2
   365  .  .  .  .  .  .  Name: "jTimestamp"
   366  .  .  .  .  .  .  Obj: *ast.Object {
   367  .  .  .  .  .  .  .  Kind: var
   368  .  .  .  .  .  .  .  Name: "jTimestamp"
   369  .  .  .  .  .  .  .  Decl: *(obj @ 361)
   370  .  .  .  .  .  .  .  Data: nil
   371  .  .  .  .  .  .  .  Type: nil
   372  .  .  .  .  .  .  }
   373  .  .  .  .  .  }
   374  .  .  .  .  }
   375  .  .  .  .  TokPos: 172:13
   376  .  .  .  .  Tok: :=
   377  .  .  .  .  Rhs: []ast.Expr (len = 1) {
   378  .  .  .  .  .  0: *ast.CallExpr {
   379  .  .  .  .  .  .  Fun: *ast.Ident {
   380  .  .  .  .  .  .  .  NamePos: 172:16
   381  .  .  .  .  .  .  .  Name: "taskTimestamp"
   382  .  .  .  .  .  .  .  Obj: *(obj @ 161)
   383  .  .  .  .  .  .  }
   384  .  .  .  .  .  .  Lparen: 172:29
   385  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
   386  .  .  .  .  .  .  .  0: *ast.IndexExpr {
   387  .  .  .  .  .  .  .  .  X: *ast.Ident {
   388  .  .  .  .  .  .  .  .  .  NamePos: 172:30
   389  .  .  .  .  .  .  .  .  .  Name: "t"
   390  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 18)
   391  .  .  .  .  .  .  .  .  }
   392  .  .  .  .  .  .  .  .  Lbrack: 172:31
   393  .  .  .  .  .  .  .  .  Index: *ast.Ident {
   394  .  .  .  .  .  .  .  .  .  NamePos: 172:32
   395  .  .  .  .  .  .  .  .  .  Name: "j"
   396  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 99)
   397  .  .  .  .  .  .  .  .  }
   398  .  .  .  .  .  .  .  .  Rbrack: 172:33
   399  .  .  .  .  .  .  .  }
   400  .  .  .  .  .  .  }
   401  .  .  .  .  .  .  Ellipsis: -
   402  .  .  .  .  .  .  Rparen: 172:34
   403  .  .  .  .  .  }
   404  .  .  .  .  }
   405  .  .  .  }
   406  .  .  .  2: *ast.IfStmt {
   407  .  .  .  .  If: 174:2
   408  .  .  .  .  Init: nil
   409  .  .  .  .  Cond: *ast.BinaryExpr {
   410  .  .  .  .  .  X: *ast.Ident {
   411  .  .  .  .  .  .  NamePos: 174:5
   412  .  .  .  .  .  .  Name: "iTimestamp"
   413  .  .  .  .  .  .  Obj: *(obj @ 145)
   414  .  .  .  .  .  }
   415  .  .  .  .  .  OpPos: 174:16
   416  .  .  .  .  .  Op: ==
   417  .  .  .  .  .  Y: *ast.Ident {
   418  .  .  .  .  .  .  NamePos: 174:19
   419  .  .  .  .  .  .  Name: "nil"
   420  .  .  .  .  .  .  Obj: nil
   421  .  .  .  .  .  }
   422  .  .  .  .  }
   423  .  .  .  .  Body: *ast.BlockStmt {
   424  .  .  .  .  .  Lbrace: 174:23
   425  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   426  .  .  .  .  .  .  0: *ast.ReturnStmt {
   427  .  .  .  .  .  .  .  Return: 175:3
   428  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   429  .  .  .  .  .  .  .  .  0: *ast.Ident {
   430  .  .  .  .  .  .  .  .  .  NamePos: 175:10
   431  .  .  .  .  .  .  .  .  .  Name: "true"
   432  .  .  .  .  .  .  .  .  .  Obj: nil
   433  .  .  .  .  .  .  .  .  }
   434  .  .  .  .  .  .  .  }
   435  .  .  .  .  .  .  }
   436  .  .  .  .  .  }
   437  .  .  .  .  .  Rbrace: 176:2
   438  .  .  .  .  }
   439  .  .  .  .  Else: nil
   440  .  .  .  }
   441  .  .  .  3: *ast.IfStmt {
   442  .  .  .  .  If: 177:2
   443  .  .  .  .  Init: nil
   444  .  .  .  .  Cond: *ast.BinaryExpr {
   445  .  .  .  .  .  X: *ast.Ident {
   446  .  .  .  .  .  .  NamePos: 177:5
   447  .  .  .  .  .  .  Name: "jTimestamp"
   448  .  .  .  .  .  .  Obj: *(obj @ 366)
   449  .  .  .  .  .  }
   450  .  .  .  .  .  OpPos: 177:16
   451  .  .  .  .  .  Op: ==
   452  .  .  .  .  .  Y: *ast.Ident {
   453  .  .  .  .  .  .  NamePos: 177:19
   454  .  .  .  .  .  .  Name: "nil"
   455  .  .  .  .  .  .  Obj: nil
   456  .  .  .  .  .  }
   457  .  .  .  .  }
   458  .  .  .  .  Body: *ast.BlockStmt {
   459  .  .  .  .  .  Lbrace: 177:23
   460  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   461  .  .  .  .  .  .  0: *ast.ReturnStmt {
   462  .  .  .  .  .  .  .  Return: 178:3
   463  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   464  .  .  .  .  .  .  .  .  0: *ast.Ident {
   465  .  .  .  .  .  .  .  .  .  NamePos: 178:10
   466  .  .  .  .  .  .  .  .  .  Name: "false"
   467  .  .  .  .  .  .  .  .  .  Obj: nil
   468  .  .  .  .  .  .  .  .  }
   469  .  .  .  .  .  .  .  }
   470  .  .  .  .  .  .  }
   471  .  .  .  .  .  }
   472  .  .  .  .  .  Rbrace: 179:2
   473  .  .  .  .  }
   474  .  .  .  .  Else: nil
   475  .  .  .  }
   476  .  .  .  4: *ast.IfStmt {
   477  .  .  .  .  If: 180:2
   478  .  .  .  .  Init: nil
   479  .  .  .  .  Cond: *ast.BinaryExpr {
   480  .  .  .  .  .  X: *ast.SelectorExpr {
   481  .  .  .  .  .  .  X: *ast.Ident {
   482  .  .  .  .  .  .  .  NamePos: 180:5
   483  .  .  .  .  .  .  .  Name: "iTimestamp"
   484  .  .  .  .  .  .  .  Obj: *(obj @ 145)
   485  .  .  .  .  .  .  }
   486  .  .  .  .  .  .  Sel: *ast.Ident {
   487  .  .  .  .  .  .  .  NamePos: 180:16
   488  .  .  .  .  .  .  .  Name: "Seconds"
   489  .  .  .  .  .  .  .  Obj: nil
   490  .  .  .  .  .  .  }
   491  .  .  .  .  .  }
   492  .  .  .  .  .  OpPos: 180:24
   493  .  .  .  .  .  Op: <
   494  .  .  .  .  .  Y: *ast.SelectorExpr {
   495  .  .  .  .  .  .  X: *ast.Ident {
   496  .  .  .  .  .  .  .  NamePos: 180:26
   497  .  .  .  .  .  .  .  Name: "jTimestamp"
   498  .  .  .  .  .  .  .  Obj: *(obj @ 366)
   499  .  .  .  .  .  .  }
   500  .  .  .  .  .  .  Sel: *ast.Ident {
   501  .  .  .  .  .  .  .  NamePos: 180:37
   502  .  .  .  .  .  .  .  Name: "Seconds"
   503  .  .  .  .  .  .  .  Obj: nil
   504  .  .  .  .  .  .  }
   505  .  .  .  .  .  }
   506  .  .  .  .  }
   507  .  .  .  .  Body: *ast.BlockStmt {
   508  .  .  .  .  .  Lbrace: 180:45
   509  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   510  .  .  .  .  .  .  0: *ast.ReturnStmt {
   511  .  .  .  .  .  .  .  Return: 181:3
   512  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   513  .  .  .  .  .  .  .  .  0: *ast.Ident {
   514  .  .  .  .  .  .  .  .  .  NamePos: 181:10
   515  .  .  .  .  .  .  .  .  .  Name: "true"
   516  .  .  .  .  .  .  .  .  .  Obj: nil
   517  .  .  .  .  .  .  .  .  }
   518  .  .  .  .  .  .  .  }
   519  .  .  .  .  .  .  }
   520  .  .  .  .  .  }
   521  .  .  .  .  .  Rbrace: 182:2
   522  .  .  .  .  }
   523  .  .  .  .  Else: nil
   524  .  .  .  }
   525  .  .  .  5: *ast.IfStmt {
   526  .  .  .  .  If: 183:2
   527  .  .  .  .  Init: nil
   528  .  .  .  .  Cond: *ast.BinaryExpr {
   529  .  .  .  .  .  X: *ast.SelectorExpr {
   530  .  .  .  .  .  .  X: *ast.Ident {
   531  .  .  .  .  .  .  .  NamePos: 183:5
   532  .  .  .  .  .  .  .  Name: "iTimestamp"
   533  .  .  .  .  .  .  .  Obj: *(obj @ 145)
   534  .  .  .  .  .  .  }
   535  .  .  .  .  .  .  Sel: *ast.Ident {
   536  .  .  .  .  .  .  .  NamePos: 183:16
   537  .  .  .  .  .  .  .  Name: "Seconds"
   538  .  .  .  .  .  .  .  Obj: nil
   539  .  .  .  .  .  .  }
   540  .  .  .  .  .  }
   541  .  .  .  .  .  OpPos: 183:24
   542  .  .  .  .  .  Op: >
   543  .  .  .  .  .  Y: *ast.SelectorExpr {
   544  .  .  .  .  .  .  X: *ast.Ident {
   545  .  .  .  .  .  .  .  NamePos: 183:26
   546  .  .  .  .  .  .  .  Name: "jTimestamp"
   547  .  .  .  .  .  .  .  Obj: *(obj @ 366)
   548  .  .  .  .  .  .  }
   549  .  .  .  .  .  .  Sel: *ast.Ident {
   550  .  .  .  .  .  .  .  NamePos: 183:37
   551  .  .  .  .  .  .  .  Name: "Seconds"
   552  .  .  .  .  .  .  .  Obj: nil
   553  .  .  .  .  .  .  }
   554  .  .  .  .  .  }
   555  .  .  .  .  }
   556  .  .  .  .  Body: *ast.BlockStmt {
   557  .  .  .  .  .  Lbrace: 183:45
   558  .  .  .  .  .  List: []ast.Stmt (len = 1) {
   559  .  .  .  .  .  .  0: *ast.ReturnStmt {
   560  .  .  .  .  .  .  .  Return: 184:3
   561  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
   562  .  .  .  .  .  .  .  .  0: *ast.Ident {
   563  .  .  .  .  .  .  .  .  .  NamePos: 184:10
   564  .  .  .  .  .  .  .  .  .  Name: "false"
   565  .  .  .  .  .  .  .  .  .  Obj: nil
   566  .  .  .  .  .  .  .  .  }
   567  .  .  .  .  .  .  .  }
   568  .  .  .  .  .  .  }
   569  .  .  .  .  .  }
   570  .  .  .  .  .  Rbrace: 185:2
   571  .  .  .  .  }
   572  .  .  .  .  Else: nil
   573  .  .  .  }
   574  .  .  .  6: *ast.ReturnStmt {
   575  .  .  .  .  Return: 186:2
   576  .  .  .  .  Results: []ast.Expr (len = 1) {
   577  .  .  .  .  .  0: *ast.BinaryExpr {
   578  .  .  .  .  .  .  X: *ast.SelectorExpr {
   579  .  .  .  .  .  .  .  X: *ast.Ident {
   580  .  .  .  .  .  .  .  .  NamePos: 186:9
   581  .  .  .  .  .  .  .  .  Name: "iTimestamp"
   582  .  .  .  .  .  .  .  .  Obj: *(obj @ 145)
   583  .  .  .  .  .  .  .  }
   584  .  .  .  .  .  .  .  Sel: *ast.Ident {
   585  .  .  .  .  .  .  .  .  NamePos: 186:20
   586  .  .  .  .  .  .  .  .  Name: "Nanos"
   587  .  .  .  .  .  .  .  .  Obj: nil
   588  .  .  .  .  .  .  .  }
   589  .  .  .  .  .  .  }
   590  .  .  .  .  .  .  OpPos: 186:26
   591  .  .  .  .  .  .  Op: <
   592  .  .  .  .  .  .  Y: *ast.SelectorExpr {
   593  .  .  .  .  .  .  .  X: *ast.Ident {
   594  .  .  .  .  .  .  .  .  NamePos: 186:28
   595  .  .  .  .  .  .  .  .  Name: "jTimestamp"
   596  .  .  .  .  .  .  .  .  Obj: *(obj @ 366)
   597  .  .  .  .  .  .  .  }
   598  .  .  .  .  .  .  .  Sel: *ast.Ident {
   599  .  .  .  .  .  .  .  .  NamePos: 186:39
   600  .  .  .  .  .  .  .  .  Name: "Nanos"
   601  .  .  .  .  .  .  .  .  Obj: nil
   602  .  .  .  .  .  .  .  }
   603  .  .  .  .  .  .  }
   604  .  .  .  .  .  }
   605  .  .  .  .  }
   606  .  .  .  }
   607  .  .  }
   608  .  .  Rbrace: 187:1
   609  .  }
   610  }
